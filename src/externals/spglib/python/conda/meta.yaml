package:
  name: spglib
# Manual version string. We use git describe in buildsh for version numbers.
#  version: {{ environ.get('GIT_DESCRIBE_TAG', '') }}

source:
  git_url: https://github.com/atztogo/spglib.git
  git_branch: {{ environ.get('GIT_BRANCH','master') }}

# Lock to particular tag. We always test HEAD and build and upload tags
# so to manual tak is necessary here
#  git_tag: v1.9.0
#  patches:
   # List any patch files here
   # - fix.patch

build:
  script_env:
    - GIT_BRANCH
  preserve_egg_dir: True
# entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - spglib = spglib:main
    #
    # Would create an entry point called spglib that calls spglib.main()

# If this is a new build for the same version, increment the build
# number. If you do not include this key, it defaults to 0.
# number: {{ environ.get('GIT_DESCRIBE_NUMBER', 0) }}
  number: 0

requirements:
  build:
    - python
    - numpy

  run:
    - python
    - numpy

test:
  # Python imports
  imports:
    - spglib

#  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work. 
  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

#  requires:
    # Put any additional test requirements here.  For example
    #- nose

about:
  home: https://atztogo.github.io/spglib/
  license: BSD
  summary: 'Space symmetry groups spglib module.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
