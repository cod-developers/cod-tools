#---*- Makefile -*-------------------------------------------------------------
#$Author$
#$Date$
#$Revision$
#$URL$
#------------------------------------------------------------------------------

PERL5LIB := ../lib/perl5:${PERL5LIB}
export PERL5LIB

# Variables used to make module in the local package lib layout
PKG_TOP   = lib

CWD = ${notdir $(shell pwd)}
TEST_MODULE = ${CWD}.py

TEST_DEPENDENCIES = ${TEST_MODULE} _ccifparser.so

WORK_TESTS = ${wildcard *.inp}
TEST_DIR = tests
OUTP_DIR = outputs

TEST_FILES = ${wildcard ${TEST_DIR}/*.inp}
DIFF_FILES = ${TEST_FILES:${TEST_DIR}/%.inp=${OUTP_DIR}/%.diff}
OUTP_FILES = ${TEST_FILES:${TEST_DIR}/%.inp=${OUTP_DIR}/%.out}

.PHONY: all clean cleanAll distclean test tests alltests out outputs
.PHONY: run times

all: run tests

SHELL = /bin/bash

run: ${TEST_DEPENDENCIES} ${WORK_TESTS}
	@for file in ${WORK_TESTS}; do \
	( \
		echo === $$file ===; \
		set -x; \
		perl -e 'use ${PKG_PREFIX}${TEST_MODULE:%.py=%};' \
			 -e 'my $$parser = new ${PKG_PREFIX}${TEST_MODULE:%.py=%};' \
			 -e '$$parser->Run' < $$file \
	); \
	done

times: ${TEST_DEPENDENCIES} ${WORK_TESTS}
	for file in ${WORK_TESTS}; do \
	( \
		echo === $$file ===; \
		set -x; \
		time perl -e 'use ${PKG_PREFIX}${TEST_MODULE:%.py=%};' \
				  -e 'my $$parser = new ${PKG_PREFIX}${TEST_MODULE:%.py=%};' \
				  -e '$$parser->Run' < $$file \
	); \
	done

tests alltests: test shtest

#------------------------------------------------------------------------------

test: ${DIFF_FILES}

out outputs: ${OUTP_FILES}

${OUTP_DIR}/%.diff: ${TEST_DEPENDENCIES} ${TEST_DIR}/%.inp ${TEST_DIR}/%.opt
	-@printf "%-30s " "$*:" ; \
	python -c 'import ${TEST_MODULE:%.py=%},sys; \
		 ${TEST_MODULE:%.py=%}.parse( "-", {x: 1 for x in sys.argv[1:]} )' \
         < ${word 3, $^} 2>&1 \
         $(shell grep -v '^#' ${word 4, $^}) \
     | diff ${OUTP_DIR}/$*.out - \
     > $@ ; \
	if [ $$? = 0 ]; then echo "OK"; else echo "FAILED:"; cat $@; fi

${OUTP_DIR}/%.diff: ${TEST_DEPENDENCIES} ${TEST_DIR}/%.inp
	-@printf "%-30s " "$*:" ; \
	python -c 'import ${TEST_MODULE:%.py=%}; \
		 ${TEST_MODULE:%.py=%}.parse( "-", {} )' \
         < ${word 3, $^} 2>&1 \
     | diff ${OUTP_DIR}/$*.out - \
     > $@ ; \
	if [ $$? = 0 ]; then echo "OK"; else echo "FAILED:"; cat $@; fi

${OUTP_DIR}/%.out: ${TEST_DEPENDENCIES} ${TEST_DIR}/%.inp ${TEST_DIR}/%.opt
	-@test -f $@ || echo "$@:"
	-@test -f $@ || \
	python -c 'import ${TEST_MODULE:%.py=%},sys; \
		 ${TEST_MODULE:%.py=%}.parse( "-", {x: 1 for x in sys.argv[1:]} )' \
         < ${word 3, $^} 2>&1 \
         $(shell grep -v '^#' ${word 4, $^}) \
	| tee $@
	-@touch $@

${OUTP_DIR}/%.out: ${TEST_DEPENDENCIES} ${TEST_DIR}/%.inp
	-@test -f $@ || echo "$@:"
	-@test -f $@ || \
	python -c 'import ${TEST_MODULE:%.py=%}; \
		 ${TEST_MODULE:%.py=%}.parse( "-", {} )' \
         < ${word 3, $^} 2>&1 \
	| tee $@
	-@touch $@

#------------------------------------------------------------------------------

.PHONY: shtests

#
# Outputs and tests for the shell-driven tests:
#

SHELL_TSTDIR = ./shtests
SHELL_OUTDIR = ./shoutputs

SHELL_TESTS   = ${wildcard ${SHELL_TSTDIR}/*.sh}
SHELL_BASES   = ${notdir ${SHELL_TESTS}}
SHELL_OUTPUTS = ${addprefix ${SHELL_OUTDIR}/, ${SHELL_BASES:%.sh=%.out}}
SHELL_DIFFS   = ${addprefix ${SHELL_OUTDIR}/, ${SHELL_BASES:%.sh=%.diff}}

shoutputs shout: ${SHELL_OUTPUTS}

shtest shtests: ${SHELL_DIFFS}

${SHELL_OUTDIR}/%.out: ${SHELL_TSTDIR}/%.sh ${TEST_DEPENDENCIES}
	-@test -f $@ || echo "$@:"
	-@test -f $@ || $< ./${TEST_MODULE} 2>&1 | tee $@
	-@touch $@

${SHELL_OUTDIR}/%.diff: ${SHELL_TSTDIR}/%.sh ${TEST_DEPENDENCIES}
	-@printf "%-30s " "$*:" ; \
	$< ./${TEST_MODULE} 2>&1 | diff ${SHELL_OUTDIR}/$*.out - > $@ ; \
	if [ $$? = 0 ]; then echo "OK"; else echo "FAILED:"; cat $@; fi

#------------------------------------------------------------------------------

.PHONY: listdiff

listdiff: # test
	@-( test -d ${OUTP_DIR} && \
	    ls -l ${OUTP_DIR}/*.diff | awk '{if( $$5 > 0 ) print}' ) || \
	    true
	@-( test -d ${SHELL_OUTDIR} && \
	    ls -l ${SHELL_OUTDIR}/*.diff | awk '{if( $$5 > 0 ) print}' ) || \
	    true

#------------------------------------------------------------------------------

clean-parser-test:
	rm -f ${DIFF_FILES}
	rm -f ${SHELL_DIFFS}

clean: clean-parser-test
