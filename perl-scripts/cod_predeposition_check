#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#  Filter and check pairs of CIF and Fobs files for suitability for
#  deposition to COD database.
#**

use strict;
use POSIX qw(strftime);
use CODPredepositionCheck;
use SOptions;

my %database = (
        host  => "www.crystallography.net",
        user  => "cod_reader",
        name  => "cod",
        table => "data",
        password => "",
        platform => "mysql",
    );

my @cif;
my @hkl;

my $deposition_type = 'published';
my $options;

my $print_timestamps = 0;

@ARGV = getOptions(
    "-d,--database"  => \$database{name},
    "-l,--localhost" => sub { $database{host} = 'localhost' },
    "-h,--host"      => \$database{host},
    "-p,--port"      => \$database{port},
    "-s,--server"    => \$database{host},
    "-t,--table"     => \$database{table},
    "-u,--user"      => \$database{user},
    "--password"     => \$database{password},
    "--platform"     => \$database{platform},

    "--cif" => sub { push( @cif, get_value() ) },
    "--hkl" => sub { @hkl[(@cif-1 > 0) ? @cif-1 : 0] = get_value() },

    "--type,--deposition-type" => \$deposition_type,

    "--bypass-checks" => sub { $options->{bypass_checks} = 1 },
    "--dont-bypass-checks" => sub { delete( $options->{bypass_checks} ) },
    "--no-bypass-checks" => sub { delete( $options->{bypass_checks} ) },

    "--replace" => sub { $options->{replace} = 1 },
    "--dont-replace" => sub { delete( $options->{replace} ) },
    "--no-replace" => sub { delete( $options->{replace} ) },

    "--release" => sub { $options->{release} = 1 },
    "--dont-release" => sub { delete( $options->{release} ) },
    "--no-release" => sub { delete( $options->{release} ) },

    "--hold-period" => \$options->{hold_period},
    "--journal" => \$options->{journal},
    "--author_name" => \$options->{author_name},

    "--print-timestamps" => sub { $print_timestamps = 1 },
    "--dont-print-timestamps" => sub { $print_timestamps = 0 },
    "--no-print-timestamps" => sub { $print_timestamps = 0 },
);

push( @cif, @ARGV );

@cif = ("-") unless @cif;

for my $i (0..@cif-1) {
    print "START $cif[$i] " . strftime( "%Y-%m-%d %T\n", localtime )
        if $print_timestamps;
    my( $cif, $hkl );
    eval {
        ( $cif, $hkl ) =
            CODPredepositionCheck::filter_and_check( $cif[$i],
                                                     $hkl[$i],
                                                     \%database,
                                                     $deposition_type,
                                                     $options );
    };
    if( !$@ ) {
        print map( "CIF $_\n", split( "\n", $cif ) ) if defined $cif;
        print map( "HKL $_\n", split( "\n", $hkl ) ) if defined $hkl;
    } else {
        print "$0: $cif[$i]: $@";
    }
    print "FINISH $cif[$i] " . strftime( "%Y-%m-%d %T\n", localtime )
        if $print_timestamps;
}
