#! /bin/sh
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#   Deposit CIFs into COD database using CGI deposition interface.
#
#   Usage: $0 structure1.cif [structure2.cif ...]
#**

TMP_DIR="${TMPDIR}"

set -ue
## set -x

script() { echo "$*"; }
setvar() { eval $1="'$3'"; }

setvar Id = '$Id$'

setvar INPUT_CONFIG = "${HOME}/.cod_deposit.cfg"
setvar SERVER       = "http://test.crystallography.net"
setvar DEPOSIT_PATH = "cgi-bin/cif-deposit.pl"
setvar DEPOSIT_URL  = "${SERVER}/${DEPOSIT_PATH}"

setvar FILES = ""

setvar DEBUG    = false
setvar PROGRESS = false

setvar BASENAME = "`basename $0`"

# Executables:

curl=curl

#** OPTIONS:
#**
#**  -c, --config config-file-with-password.cfg
#**      Specify which file holds depostor user name and
#**      password (default: ~/.cod_deposit.cfg
#**
#**  -h, --host  test.crystallography.net
#**      Specify host to commit structrues to
#**
#**  -p, --path  cgi-bin/cif-deposit.pl
#**      Specify script path within the host to use for structure upload
#**
#**  -u, --url  http://test.crystallography.net/cgi-bin/cif-deposit.pl
#**      Specify the full URL to use for structure uploading (default:
#**      combine --host and --path values using http:// protocol and /).
#**
#**  -P, --progress
#**      Ask cif-deposit.pl to report progress of the deposition.
#**
#**  -D, --debug
#**      Request output of the progress information from cif-deposit.pl to the
#**      HTTP server log.
#**
#**  --help                   print short help message (this message) and exit
while [ $# -gt 0 ]
do
  case $1 in
      -c|--config|--confi|--conf|--con|--co|--co)
          INPUT_CONFIG="$2"
          shift
          ;;
      -h|--host|--hos|--ho|--h)
          SERVER="http://$2"
          DEPOSIT_URL="${SERVER}/${DEPOSIT_PATH}"
          shift
          ;;
      -p|--path)
          DEPOSIT_PATH="$2"
          DEPOSIT_URL="${SERVER}/${DEPOSIT_PATH}"
          shift
          ;;
      -u|--url|--ur|--u)
          DEPOSIT_URL="$2"
          shift
          ;;
      -D|--debug|--debu|--deb|--de|--d)
          DEBUG=true
          ;;
      -D-|--no-debug|--no-debu|--no-deb|--no-de|--no-d)
          DEBUG=false
          ;;
      -P|--progress|--progres|--progre|--progr|--prog|--pro|--pr|--p)
          PROGRESS=true
          ;;
      -P-|--no-progress|--no-progres|--no-progre|--no-progr|--no-prog|\
      --no-pro|--no-pr|--no-p)
          PROGRESS=false
          ;;
      --script|--scrip|--scri|--scr|--sc|--s)
          curl="script curl"
          ;;
      --run|--ru|--r)
          curl=curl
          ;;
      --help|--hel|--he|--h)
            awk '/#\*/,/#\*\*/ {
                    sub("^ *#[*]?[*]?", ""); \
                    gsub("\\$0","'$0'"); \
                    print $0
                }' $0
	    exit
	    ;;      
      -*) echo "`basename $0`: unknown option $1" >&2 ; exit 1 ;;
      *)  FILES="$FILES '$1'" ;;
    esac
    shift
done

## echo ${FILES}
eval set -- "${FILES}"

if [ $DEBUG = true ]
then
    DEBUG_ARG='-F debug=1'
else
    DEBUG_ARG=''
fi

if [ $PROGRESS = true ]
then
    PROGRESS_ARG='-F progress=1'
else
    PROGRESS_ARG=''
fi

test -z "${TMP_DIR}" && TMP_DIR="/tmp"
TMP_DIR="${TMP_DIR}/tmp-${BASENAME}-$$"
mkdir "${TMP_DIR}"

if [ $# -gt 0 ]
then
    TMP_CIFFILE="${TMP_DIR}/$(basename $1)"
else
    TMP_CIFFILE="${TMP_DIR}/$(basename $0 .sh).cif"
fi

TMP_PASSWRD="${TMP_DIR}/password"

touch ${TMP_PASSWRD}
chmod 600 ${TMP_PASSWRD}

USERNAME=$(awk -F= '/^username=/{print $2}' ${INPUT_CONFIG})
awk -F= '/^password=/{print $2}' ${INPUT_CONFIG} | tr -d "\n" > ${TMP_PASSWRD}

cat ${1+"$@"} > ${TMP_CIFFILE}

${curl} \
    ${DEBUG_ARG} \
    ${PROGRESS_ARG} \
    -F "username=${USERNAME}" \
    -F "password=<${TMP_PASSWRD}" \
    -F "cif=@${TMP_CIFFILE};filename=$(basename ${TMP_CIFFILE})" \
    -F "deposition_type=published" \
    ${DEPOSIT_URL} \

rm -rf "${TMP_DIR}"
