#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#  Convert Pubmed XML bibliography records to my own XML-like markup.
#**

use strict;

@ARGV = ("-") unless @ARGV;

for my $file (@ARGV) {
    open( F, $file ) or die "$0: could not open file '$file' for reading";
    
    local $/; #  enable "slurp" mode: read the whole header file.

    my $xml = <F>; # read in the whole XML file

    ## print $xml;

    if( $xml =~ m|<PubmedArticleSet.*?>(.*?)</PubmedArticleSet>|ms ) {
        my $article_nr = 0;
        my $article_set = $1;
        ## print "$article_set = $article_set\n";
        while( $article_set =~ s|<PubmedArticle.*?>(.*?)</PubmedArticle>||ms ) {
            my $article = $1;
            ## print "$article = $article\n";
            $article_nr ++;

            my $journal;
            if( $article =~ m|<Title.*?>(.*?)</Title>|ms ) {
                $journal = $1;
            } else {
                print STDERR "$0: WARNING, no <Title> (Journal title) " .
                    "found in the file '$file' article $article_nr\n";
            }

            my $title;
            if( $article =~ m|<ArticleTitle.*?>(.*?)</ArticleTitle>|ms ) {
                $title = $1;
            } else {
                print STDERR "$0: WARNING, no <ArticleTitle> found in the file '$file' ".
                    "article $article_nr\n";
            }

            my $year;
            if( $article =~ m|<PubDate>(.*?)</PubDate>|ms ) {
                my $publication_date = $1;
                if( $publication_date =~ m|<Year>(.*?)</Year>|ms ) {
                    $year = $1;
                }
            }
            if( !defined $year ) {
                print STDERR "$0: WARNING, no <Year...> found in the file '$file' ".
                    "article $article_nr\n";
            }

            my $issue;
            if( $article =~ m|<Issue.*?>(.*?)</Issue>|ms ) {
                $issue = $1;
            }

            my $volume;
            if( $article =~ m|<Volume.*?>(.*?)</Volume>|ms ) {
                $volume = $1;
            }

            my $doi;
            if( $article =~ m|<ArticleId IdType="doi"*>(.*?)</ArticleId>|ms ) {
                $doi = $1;
            }

            my $pages = "";
            if( $article =~ m|<MedlinePgn.*?>(.*?)</MedlinePgn>| ) {
                $pages = $1;
            } elsif( $article =~ m|<Pagination.*?>(.*?)</Pagination>| ){
                $pages = $1;
                $pages =~ m/(\d+\s*(:?-\s*\d+)?)/;
                $pages = $1;
            } else {
                print STDERR "$0: WARNING, no <MedlinePgn> or <Pagination> " .
                    "found in the file '$file' ".
                    "article $article_nr\n";
            }

            if( $article =~ m|<AuthorList.*?>(.*?)</AuthorList>|ms ) {
                my $author_list = $1;

                print "<authors separator=\";\">";
                my $separator = "";
                while( $author_list =~ s|<Author.*?>(.*?)</Author>||ms ) {
                    my $author = $1;
                    $author =~ m|<LastName.*?>(.*?)</LastName>|;
                    my $last = $1;
                    my $first;
                    if( $author =~ m|<ForeName.*?>(.*?)</ForeName>| ) {
                        $first = $1;
                    } else {
                        if( $author =~ m|<FirstName.*?>(.*?)</FirstName>| ) {
                            $first = $1;
                        }
                        if( $author =~ m|<MiddleName.*?>(.*?)</MiddleName>| ) {
                            $first .= " " . $1;
                        }
                    }
                    my $junior;
                    if( $author =~ m|<Suffix.*?>(.*?)</Suffix>| ) {
                        $junior = $1;
                    }
                    my $author_name = $last;
                    if( defined $junior ) {
                        $author_name .= ", " . $junior;
                    }
                    $author_name .= ", " . ( defined $first ? $first : "?" );
                    print $separator, $author_name;
                    $separator = "; ";
                }
            } # if AuthorList

            print "</authors>\n";

            print "<title>$title</title>\n" if defined $title;
            print "<journal>$journal</journal>\n" if defined $journal;
            print "<year>$year</year>\n" if defined $year;
            print "<volume>$volume</volume>\n" if defined $volume;
            print "<issue>$issue</issue>\n" if defined $issue;
            print "<pages>$pages</pages>\n" if $pages;
            print "<doi>$doi</doi>\n" if defined $doi;
            print "\n";
        }
    } else {
        print STDERR "$0: ERROR, <PubmedArticleSet> is not found in file '$file'\n";
        die
    }

    close F;
}
