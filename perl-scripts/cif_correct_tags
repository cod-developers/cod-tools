#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#  Correct misspelled tags in a CIF file. 
#**

use strict;
use lib "./lib/perl5";
use lib "./CIFParser";
use CIFParser;
use CIFTagCanonicalNames;
use CIFDictTags;
use CIFCODTags;
use CIFTagManage;
use CIFTagPrint;
use SOptions;
use SUsage;
use UserMessage;

my $keep_tag_order = 0;
my $Id = '$Id$';
my $replacement_list;

@ARGV = getOptions(
    "--keep-tag-order" => sub { $keep_tag_order = 1; },
    "--sort-tags"      => sub { $keep_tag_order = 0; },
    "--help,--usage"   => sub { SUsage::usage; exit },
    "--replacement-list" => \$replacement_list,
);

sub insert_report_to_comments 
{
    my ($dataset, $insert_reports) = @_;
    if ( @$insert_reports > 0 ) {
        my $comments_tag = '_cod_depositor_comments';
        my $values = $dataset->{values};
        my $reports_value = join("\n\n",@$insert_reports);

        my $message =
            "The following automatic conversions were performed:\n" .
            join( "\n", map { "" . $_ }
                  CIFTagPrint::fold( 70, " +", " ", $reports_value ));

        if( exists $values->{$comments_tag} ) {
            $values->{$comments_tag}[0] .= "\n\n" . $message;
        } else {
            $values->{$comments_tag}[0] = "\n" . $message;
        }
        my $signature = $Id;
        $signature =~ s/^\$|\$$//g;
        $values->{$comments_tag}[0] .=
            "\n\n" . "Automatic conversion script" .
            "\n" . $signature;
    }
} 

my %tag_spelling = ();

if( $replacement_list ) {
    open( LIST, $replacement_list ) or
        die "$0: $replacement_list: can not open file for input - $!";

    %tag_spelling =
        map { split }
        grep !/^\#/,
        grep '\.',
    <LIST>;

    close( LIST ) or
        die "$0: $replacement_list: error closing file - $!";
}

my @dictionary_tags = ( @CIFDictTags::tag_list, @CIFCODTags::tag_list );
my %dictionary_tags = map { $_, $_ } @dictionary_tags;

@ARGV = ("-") unless @ARGV;

for my $filename (@ARGV) {
    my $parser = new CIFParser;
    my $data = $parser->Run($filename);

    if( defined $parser->YYData->{ERRCOUNT} &&
        $parser->YYData->{ERRCOUNT} > 0 ) {
            print STDERR "$0: $filename: ",
            $parser->YYData->{ERRCOUNT},
            " error(s) encountered while parsing CIF data\n";
            exit -1;
    }

    canonicalize_all_names( $data );

    for my $dataset (@$data) {

        my @insert_reports = ();
        my $tags = $dataset->{tags};
        my $values = $dataset->{values};
        my $dataname = $dataset->{name};

        for my $tag (@$tags) {
            if( exists $tag_spelling{$tag} ) {
                my $old_tag = $tag;
                my $correct = $tag_spelling{$tag};
                if( !exists $values->{$correct} ) {
                    CIFTagManage::rename_tag( $dataset, $tag, $correct );
                    my $report_msg = 
                    "'$old_tag' tag replaced with '$correct' tag " .
                    "as specified in the replacement file " .
                    "'$replacement_list'.";
                    push (@insert_reports, $report_msg);
                    note( $0, $filename, $dataname, $report_msg );
                }
            }
            if( $tag =~ /^_+(_[^_].*)$/ ) {
                my $old_tag = $tag;
                my $correct = $1;
                if( exists $dictionary_tags{$correct} &&
                    !exists $values->{$correct} ) {
                    CIFTagManage::rename_tag( $dataset, $tag, $correct );
                    my $report_msg = "'$old_tag' tag replaced with " .
                                     "'$correct' tag.";
                    push (@insert_reports, $report_msg);
                    note( $0, $filename, $dataname, $report_msg );
                }
            }
        }
        insert_report_to_comments ($dataset,\@insert_reports);
        print_cif( $dataset, {
            exclude_misspelled_tags => 0,
            preserve_loop_order => 1,
            fold_long_fields => 0,
            dictionary_tags => \%dictionary_tags,
            dictionary_tag_list => \@dictionary_tags,
            keep_tag_order => $keep_tag_order,
        } );
    }
}
