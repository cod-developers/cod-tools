#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Date$
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#  Find COD numbers for the .cif files in given directories of file lists.
#**

use strict;
use File::Basename;
use CIFParser;
use CCIFParser;
use Formulae::AdHocParser;
use CIFData::CIFCODNumbers;
use SOptions;
use SUsage;

my %database = (
        host  => "www.crystallography.net",
        user  => "cod_reader",
        name  => "cod",
        table => "data",
        password => "",
        platform => "mysql",
    );

my $use_parser = "perl";

my %options;

#*Usage:
#*     cif_cod_numbers [options] file1.cif [file2.cif ...]
#*
#*Options:
#*     -d, --database  cod
#*        Use database "cod" to query for strctures.
#*
#*     -h, --host   www.crystallography.net
#*     -s, --server www.crystallography.net
#*        Query COD database on the host 'www.crystallography.net'.
#*
#*     -l, --localhost
#*        Use database server on the localhost to query the COD database.
#*
#*     -p, --port 3306
#*        Use use the specified port (default 3306) to query structures.
#*
#*     -t, --table  data
#*        Use SQL table "data" to query for strctures.
#*
#*     -u, --user cod_reader
#*        Use user name "cod_reader" to access COD database; this reader
#*        sould be granted SELECT priviledge, i.e. should be able to read
#*        the COD database, whithout supplying a password.
#*
#*     --password
#*        Use the specified password (default empty) to connect.
#*
#*     -S, --series 9
#*        Check only COD entries starting with 9 (so called 9* series).
#*        Default: check all COD database. Set series to "" (empty string)
#*        to restore the default behaviour.
#*
#*     --max-cell-difference 0.5
#*        Maximum difference of unit cell lengths allowed for 
#*        entries regarded as the same, in Angstroems.
#*
#*     --max-cell-difference 1.2
#*        Maximum difference of unit cell angles allowed for
#*        entries regarded as the same, in Angstroems.
#*
#*     --check-bibliography
#*        Only CIFs that have different bibliography data are declared different
#*        if all other parameters match (default). CIFs with missing bibliographies
#*        are assumed to have matching bibliographies.
#*
#*     --dont-check-bibliography, --no-check-bibliography
#*        Ignore bibliographic data of all CIFs; thus even files with different
#*        bibliographies will be regared the same if their cells, chemical
#*        formulae and measurement conditions match.
#*
#*     --ignore-sigma
#*        Ignore standard deviations (sigmas) when comparing unit cell constants
#*
#*     --dont-ignore-sigma, --use-sigma
#*        Use standard deviations (sigmas) when comparing unit cell constants
#*
#*     --check-sample-history
#*        Only CIFs that have different sample history data (as recorded
#*        in the _exptl_crystal_thermal_history and _exptl_crystal_pressure_history
#*        tags) are declared different if all other parameters match.
#*
#*     --dont-check-sample-history, --no-check-sample-history,
#*     --disregard-sample-history
#*        Ignore sample history of all CIFs; thus even files with different
#*        sample histories will be regared the same if their cells,
#*        chemical formulae and measurement conditions match.
#*        (default)
#*
#*     --use-perl-parser  Use the Perl-only CIF parser
#*     --use-c-parser     Use the speed-optimised C/Perl parser
#*
#*     --help  print a short usage message (this message) and exit.
#**

@ARGV = getOptions( 
    "-d,--database"  => \$database{name},
    "-l,--localhost" => sub { $database{host} = 'localhost' },
    "-h,--host"      => \$database{host},
    "-p,--port"      => \$database{port},
    "-s,--server"    => \$database{host},
    "-t,--table"     => \$database{table},
    "-u,--user"      => \$database{user},
    "--password"     => \$database{password},
    "--platform"     => \$database{platform},

    "-S,--series" => \$options{cod_series_prefix},

    "--max-cell-length-difference" => \$options{max_cell_length_diff},
    "--max-cell-angle-difference"  => \$options{max_cell_angle_diff},

    "--check-bibliography"      => sub { $options{check_bibliography} = 1; },
    "--dont-check-bibliography" => sub { $options{check_bibliography} = 0; },
    "--no-check-bibliography"   => sub { $options{check_bibliography} = 0; },

    "--check-sample-history"      => sub { $options{check_sample_history} = 1; },
    "--dont-check-sample-history" => sub { $options{check_sample_history} = 0; },
    "--no-check-sample-history"   => sub { $options{check_sample_history} = 0; },
    "--disregard-sample-history"  => sub { $options{check_sample_history} = 0; },

    "--ignore-sigma"        => sub{ $options{ignore_sigma} = 1 },
    "--dont-ignore-sigma"   => sub{ $options{ignore_sigma} = 0 },
    "--no-ignore-sigma"     => sub{ $options{ignore_sigma} = 0 },

    "--use-sigma"       => sub{ $options{ignore_sigma} = 0 },
    "--dont-use-sigma"  => sub{ $options{ignore_sigma} = 1 },
    "--no-use-sigma"    => sub{ $options{ignore_sigma} = 1 },

    "--use-perl-parser"       => sub{ $use_parser = "perl" },
    "--use-c-parser"          => sub{ $use_parser = "c" },

    "--help,--usage" => sub { SUsage::usage; exit },
);

@ARGV = ("-") unless @ARGV;

for my $file (@ARGV) {

    my @data;

    eval {
        @data = load_cif_file( $file );
    };
    if( $@ ) {
        warn $@;
        next
    }

    if( !@data || !defined $data[0] || !defined $data[0]->{name} ) {
        warn( "file '$file' seems to be empty" );
    }

    my $duplicates = CIFCODNumbers::fetch_duplicates(
        \@data, $file, \%database, \%options );

    for my $datablock ( @$duplicates ) {
        if( keys %{ $datablock->{duplicates} } > 0 ) {
            for my $key (sort keys %{ $datablock->{duplicates} } ) {
                my $COD_entry = $datablock->{duplicates}{$key};
                printf
                    "%-35s %15s %3d %s\n",
                    $datablock->{formula},
                    $COD_entry->{filename},
                    scalar keys %{ $datablock->{duplicates} },
                    $file;
            }
        } else {
            printf
                "%-35s %15s %3d %s\n",
                $datablock->{formula}, "?", 0, $file;
        }
    }
}

#------------------------------------------------------------------------------

sub load_cif_file
{
    my ( $file ) = @_;

    my $data;
    my $error_count;

    if( $use_parser eq "perl" ) {
        my $parser = new CIFParser;
        $data = $parser->Run($file);
        if( defined $parser->YYData->{ERRCOUNT} &&
            $parser->YYData->{ERRCOUNT} > 0 ) {
            $error_count = defined $parser->YYData->{ERRCOUNT};
        }
    } else {
        ( $data, $error_count ) = CCIFParser::parse( $file );
    }

    if( defined $error_count && $error_count > 0 ) {
        print STDERR "$0: ", $error_count,
        " error(s) encountered while parsing file '${file}'\n";
        die;
    }

    return wantarray ? @{$data} : $data;
}
