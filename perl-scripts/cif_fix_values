#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#  Correct temperature values which have units specified or convert Celsius degrees 
#  to Kelvins. Fix other values such as  'none', 'not measured', ect.
#**

use strict;
use lib "./lib/perl5";
use lib "./CIFParser";
use CIFParser;
use CIFTagCanonicalNames;
use CIFDictTags;
use CIFCODTags;
use CIFTagPrint;
use SOptions;
use SUsage;

my $keep_tag_order = 0;

@ARGV = getOptions(
    "--keep-tag-order" => sub { $keep_tag_order = 1; },
    "--sort-tags"      => sub { $keep_tag_order = 0; },
    "--help,--usage"   => sub { SUsage::usage; exit },
);

my @dictionary_tags = ( @CIFDictTags::tag_list, @CIFCODTags::tag_list );
my %dictionary_tags = map { $_, $_ } @dictionary_tags;

@ARGV = ("-") unless @ARGV;

for my $filename (@ARGV) {
    my $parser = new CIFParser;
    my $data = $parser->Run($filename);

    if( defined $parser->YYData->{ERRCOUNT} &&
        $parser->YYData->{ERRCOUNT} > 0 ) {
	print STDERR "$0: $filename: ",
	$parser->YYData->{ERRCOUNT},
	" error(s) encountered while parsing CIF data\n";
	## exit -1;
	next;
    }

    canonicalize_all_names( $data );
    for my $dataset (@$data) {

	my $values = $dataset->{values};
        my @temp_tags =
            ( '_exptl_crystal_density_meas_temp',
              '_cell_measurement_temperature',		
              '_chemical_temperature_decomposition',		
              '_chemical_temperature_sublimation',
              '_diffrn_ambient_temperature',  
              '_exptl_crystal_density_meas_temp',
              '_chemical_melting_point' );                     
        my $number_pos =
            '(?:^\+?' . 
            '(?:\d+(?:\.\d*)?|\.\d+' .
            '(?:[eE][-+]?\d+)?))';
        my $number_neg =  
            '(?:^-' .
            '(?:\d+(?:\.\d*)?|\.\d+' .
            '(?:[eE][-+]?\d+)?))';
        my $temp_K  = 
            '((?i:[K](?:elvin?)?)|(?i:[K]))';
        my $temp_C  = 
            '(?i:[C]|[Dd]eg(?:rees?)?\s*)';
        my $temp_RT = 
            '\s*(?:(?i:room)|(?i:amb(?i:i[ae]nte?))' .
            '?\s*(?i:temp(?:erature)?))|(?i:rt)'; 
        my $temp_undef = 
            '\s*(?i:[Y]es)|(?i:[N]o(?:ne)?)|(?i:[U]known)|' .
            '(?i:[N]ot)\s*(?i:[M]easured)';

        for my $tag (@temp_tags) {
            if( exists $values->{$tag} ) {
                for my $i (0..$#{$values->{$tag}}) {
                    my $temperature = $values->{$tag}[$i];
                    if( $temperature =~	/($number_pos)(?:[-_\s]*)$temp_K/ ) {
                        $values->{$tag}[$i] = "$1";
                        print STDERR  "$0: $filename: NOTE, " .
                                      "$tag value '$temperature' changed to '$1' - " .
                                      "value should be numeric, i.e.'FLOAT or 'INT' " .
                                      "without temperature units.\n";
                        next;
                    } 
                    if ( $temperature =~ /($number_pos)(?:[-_\s]*)$temp_C/ ) {
                        $values->{$tag}[$i] = $1 + 273.15;
                        print STDERR  "$0: $filename: NOTE, " .
                                      "$tag value '$temperature' changed to '$1+273.15' - " .
                                      "converted between Celsius(C) and Kelvins(K), " . 
                                      "value should be numeric, permitted range [0.0; ∞] " .
                                      "given in Kelvins(K) without temperature units.\n";
                        next;
                    }
                    if( $temperature =~	/($number_neg)(?:[-_\s]*)$temp_C/ ) {
                        $values->{$tag}[$i] = $1 + 273.15;
                        print STDERR  "$0: $filename: NOTE, " .
                                      "$tag value '$temperature' changed to '$1+273.15' - " .
                                      "making conversion between Celsius(C) and Kelvins(K), " .
                                      "value should be numeric, permitted range [0.0;+inf], " .
                                      "given in Kelvins(K) without temperature units.\n";
                        next;				
                    }
                    if( $temperature =~	/($number_neg)(?:[-_\s]*)/ ) {
                        $values->{$tag}[$i] = $1 + 273.15;
                        print STDERR  "$0: $filename: NOTE, " .
                                      "$tag value $temperature changed to $1+273.15 - " .
                                      "value should be numeric, permitted range [0.0;+inf], " .
                                      "given in Kelvins(K) without temperature units.\n";
                        next;				
                    }
                    if( $temperature =~ /($temp_RT)(?:[-_\s]*)/ ) {
                        $values->{$tag}[$i] = "295(2)";
                        print STDERR  "$0: $filename: NOTE, " .
                                      "$tag value '$temperature' changed to '295(2)' - " .
                                      "took room/ambient temperature average value [293;298] " .
                                      "in Kelvins(K).\n";
                        next;
                    }
                    if( $temperature =~ /($temp_undef)(?:[-_\s]*)/ ) {
                        $values->{$tag}[$i] = "?";
                        print STDERR  "$0: $filename: NOTE, " .
                                      "$tag value '$temperature' changed to '?' - " .
                                      "value is undefined or not given.\n";
                        next;
                    }			
                } 
            }
        } 

     	print_cif( $dataset, {
	    exclude_misspelled_tags => 0,
	    preserve_loop_order => 1,
	    fold_long_fields => 0,
	    dictionary_tags => \%dictionary_tags,
	    dictionary_tag_list => \@dictionary_tags,
	    keep_tag_order => $keep_tag_order,
        });
    }
    
}
