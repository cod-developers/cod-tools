#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
#  Parse a CIF file, reformat author names in AMCSD convention into
#  COD format.
#**

use strict;
use lib "./lib/perl5";
use lib "./CIFParser";
use CIFParser;
use CIFTagCanonicalNames;
use CIFDictTags;
use CIFCODTags;
use CIFTagPrint;
use SOptions;
use SUsage;

my $keep_tag_order = 0;

@ARGV = getOptions(
    "--keep-tag-order" => sub { $keep_tag_order = 1; },
    "--sort-tags"      => sub { $keep_tag_order = 0; },
    "--help,--usage"   => sub { SUsage::usage; exit },
);

my @dictionary_tags = ( @CIFDictTags::tag_list, @CIFCODTags::tag_list );
my %dictionary_tags = map { $_, $_ } @dictionary_tags;

sub get_pressure_unit_coefficient($);
sub get_temperature_unit_shift($);

@ARGV = ("-") unless @ARGV;

for my $filename (@ARGV) {
    my $parser = new CIFParser;
    my $data = $parser->Run($filename);

    if( defined $parser->YYData->{ERRCOUNT} &&
        $parser->YYData->{ERRCOUNT} > 0 ) {
	print STDERR "$0: $filename: ",
	$parser->YYData->{ERRCOUNT},
	" error(s) encountered while parsing CIF data\n";
	exit -1;
    }

    canonicalize_all_names( $data );

    for my $dataset (@$data) {

	my $values = $dataset->{values};

	my $temperature_is_processing = 0;

	for my $tag ( @{$dataset->{tags}} ) {
	    if( $values->{$tag}[0] =~
		/((?:\w+\s+)?(?:anneal\w*|quench\w*)(?:\s+\w+)?)\s+
                 T\s*=\s*([-+0-9.E]+)\s*((?:deg(?:ree(?:s)?)?\s+)?[\w]+)/xi ) {
		print STDERR "$0: $filename data_$dataset->{name}: ",
		"structure marked as '$1', not taking temperature value\n";
		$temperature_is_processing = 1;
		last
	    }
	}
	for my $tag ( @{$dataset->{tags}} ) {
	    if( $values->{$tag}[0] =~ /P\s*=\s*([-+0-9.eE]+)\s*([\w]+)/ ) {
		my $pressure = $1;
		my $units = $2;
		my $coefficient;
		eval {
		    $coefficient = get_pressure_unit_coefficient( $units );
		};
		if( $@ ) {
		    print STDERR "$0: $filename data_$dataset->{name}: ", $@;
		    next;
		}
		print ">>> P = $pressure, $units, $coefficient\n";
	    }
	    if( !$temperature_is_processing &&
		$values->{$tag}[0] =~
		    /T\s*=\s*([-+0-9.eE]+)\s*((?:deg(?:ree(?:s)?)?\s+)?[\w]+)/ ) {
		my $temperature = $1;
		my $units = $2;
		my $shift;
		eval {
		    $shift = get_temperature_unit_shift( $units );
		};
		if( $@ ) {
		    print STDERR "$0: $filename data_$dataset->{name}: ", $@;
		    next;
		}
		print ">>> T = $temperature, $units, $shift\n";
	    }
	}

	print_cif( $dataset, {
	    exclude_misspelled_tags => 0,
	    preserve_loop_order => 1,
	    fold_long_fields => 0,
	    dictionary_tags => \%dictionary_tags,
	    dictionary_tag_list => \@dictionary_tags,
	    keep_tag_order => $keep_tag_order,
	} ) if 0;
    }
}

sub get_pressure_unit_coefficient($)
{
    my ($units) = @_;

    for ($units) {
	return 1E-1 if /^kbar$/;
	return 1E-1 if /^Kbar$/;
	return 1E-1 if /^kb$/;
	return 1E-4 if /^atm$/;
	return 1E-4 if /^bar$/;
	return 1E-6 if /^kPa$/;
	return 1E-3 if /^MPa$/;
	return 1    if /^GPa$/;
	return 1    if /^Gpa$/;
    }
    die( "unknown pressure units '$units'" )
}

sub get_temperature_unit_shift($)
{
    my ($units) = @_;
    for ($units) {
	return 0 if /^K$/;
	return 273.15 if /^C$/;
	return 273.15 if /^deg C$/;
	return 273.15 if /^degree C$/;
	return 273.15 if /^degrees C$/;
    }
    die( "unknown temperature units '$units'" )
}
