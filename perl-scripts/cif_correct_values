#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author: adriana $
#$Date: 2010-10-29 11:49:42 +0300 (Fri, 29 Oct 2010) $
#$Revision: 1458 $
#$URL: svn://cod.ibt.lt/cif-tools/trunk/perl-scripts/cif_correct_values $
#------------------------------------------------------------------------------
#*
#  Correct misspelled values in a CIF file.
#**

use strict;
use lib "./lib/perl5";
use lib "./CIFParser";
use CIFParser;
use CIFTagCanonicalNames;
use CIFDictTags;
use CIFCODTags;
use CIFTagManage;
use CIFTagPrint;
use SOptions;
use SUsage;

my $keep_tag_order = 0;
my $Id = '$Id: cif_correct_values 1458 2010-10-29 11:49:42Z adriana $';
my $replacement_values;

@ARGV = getOptions(
    "--keep-tag-order" => sub { $keep_tag_order = 1; },
    "--sort-tags"      => sub { $keep_tag_order = 0; },
    "--help,--usage"   => sub { SUsage::usage; exit },
    "--replacement-values" => \$replacement_values,
);

sub insert_report_to_comments
{
    my ($dataset, $insert_reports) = @_;
    if ( @$insert_reports > 0 ) {
        my $comments_tag = '_cod_depositor_comments';
        my $values = $dataset->{values};
        my $reports_value = join("\n\n",@$insert_reports);

        my $message =
            "The following automatic conversions were performed:\n" .
            join( "\n", map { "" . $_ }
                  CIFTagPrint::fold( 70, " +", " ", $reports_value ));

        if( exists $values->{$comments_tag} ) {
            $values->{$comments_tag}[0] .= "\n\n" . $message;
        } else {
            $values->{$comments_tag}[0] = "\n" . $message;
        }
        my $signature = $Id;
        $signature =~ s/^\$|\$$//g;
        $values->{$comments_tag}[0] .=
            "\n\n" . "Automatic conversion script" .
            "\n" . $signature;
    }
}

my %value_spelling = ();

if( $replacement_values ) {
    open( LIST, $replacement_values ) or
        die "$0: $replacement_values: can not open file for input - $!";
    foreach( <LIST> ) {
        if( /^#/ ) {
            next;
        }
        if( /^(\S+)\s+(\S+)\s+(\S+)$/ ) {
            if( !defined $value_spelling{$1} ) {
                $value_spelling{$1} = {};
            }
            $value_spelling{$1}->{$2} = $3;
            next;
        }
    }
    close( LIST ) or
        die "$0: $replacement_values: error closing file - $!";
}

my @dictionary_tags = ( @CIFDictTags::tag_list, @CIFCODTags::tag_list );
my %dictionary_tags = map { $_, $_ } @dictionary_tags;

@ARGV = ("-") unless @ARGV;
for my $filename (@ARGV) {
    
    my $parser = new CIFParser;
    my $data = $parser->Run($filename);

    if( defined $parser->YYData->{ERRCOUNT} &&
        $parser->YYData->{ERRCOUNT} > 0 ) {
            print STDERR "$0: $filename: ",
            $parser->YYData->{ERRCOUNT},
            " error(s) encountered while parsing CIF data\n";
            exit -1;
    }

    canonicalize_all_names( $data );
    my %reports = ();
    for my $dataset (@$data) {
        my @insert_reports = ();
        my $tags = $dataset->{tags};
        my $values = $dataset->{values};
        foreach my $tag ( @$tags ) {
            if(! exists $value_spelling{$tag} ) {
                next;
            }
            foreach my $tag_value( @{ $values->{$tag} } ) {
                if( $tag_value =~ /^\.|\?$/ ){
                    next;
                }
		my $lc_tag_value = lc $tag_value;
                if(! exists ${ $value_spelling{$tag}}{$lc_tag_value} ){
                    next;
                }
                my $old_value = $tag_value;
                my $correct = ${ $value_spelling{$tag}}{$lc_tag_value};
                $tag_value = $correct;
		my $report_key = 
		    $tag .'@@'. $old_value .'@@'. $correct;
		if(! exists $reports{$report_key} ) {
		    $reports{$report_key} = 0;
		}
		$reports{$report_key} ++;
            }
        }
	foreach( keys %reports  ) {
	    if( $reports{$_} == 1 ) {
		my( $tag, $incorrect_val, $correct_val ) = 
		    split( '@@', $_ );
		my $report_msg =
		    "'$tag' tag value '$incorrect_val' " .
		    "replaced with '$correct_val' value.";
		push (@insert_reports, $report_msg);
                print STDERR "$0: $filename: NOTE, $report_msg\n";
	    } else {
		my $count = $reports{$_};
		my $times = 
		    ( $count =~ /^(\d*[02-9])?1$/ ) ? "time" : "times";
		my( $tag, $incorrect_val, $correct_val ) = 
		    split( '@@', $_ );
		my $report_msg =
		    "'$tag' tag value '$incorrect_val' " .
		    "replaced with '$correct_val' value " .
		    "$count $times.";
		push (@insert_reports, $report_msg);
		print STDERR "$0: $filename: NOTE, $report_msg\n";
	    }  
	}
        insert_report_to_comments ($dataset,\@insert_reports);
        print_cif( $dataset, {
            exclude_misspelled_tags => 0,
            preserve_loop_order => 1,
            fold_long_fields => 0,
            dictionary_tags => \%dictionary_tags,
            dictionary_tag_list => \@dictionary_tags,
            keep_tag_order => $keep_tag_order,
        } );
    }
}
