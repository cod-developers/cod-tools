#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author: saulius $
#$Date: 2008-04-03 13:51:52 +0300 (Thu, 03 Apr 2008) $ 
#$Revision: 435 $
#$URL: svn+ssh://pitonas.ibt.lt/home/xray/svn-repositories/cif-tools/trunk/perl-scripts/cif_parse_new $
#------------------------------------------------------------------------------
#*
#  Parse a CIF file
#**

use strict;
use lib "./lib/perl5";
use lib "./CIFParser";
use CIFParser;
use SymopLookup;
use CCP4SymopLookup;
use SymopParse;
use ShowStruct;

sub mk_symop_key
{
    my ( $symops ) = @_;

    my @canonical = sort 
	map {SymopParse::symop_string_canonical_form($_)} @$symops;
    my $key = join( ";", @canonical );
    return $key;
}

sub mkhash
{
    if( 1 ) {
	map { (mk_symop_key($_->{symops}), $_) } @SymopLookup::table;
    } else {
	map { (mk_symop_key($_->{symops}), $_) } @CCP4SymopLookup::table;
    }
}

my %symop_lookup_table = mkhash();

do {
    use Serialise;
    serialiseRef( \%symop_lookup_table );
} if 0;

for my $filename (@ARGV) {

    my $parser = new CIFParser;

    my $data = $parser->Run($filename);

    for my $dataset (@$data) {
	## showRef( $dataset );
	my @symops;

	print "data_", $dataset->{name}, "\n";

	if( exists $dataset->{values}{_symmetry_equiv_pos_as_xyz} ) {
	    @symops = @{$dataset->{values}{_symmetry_equiv_pos_as_xyz}};

	    my $has_errors = 0;
	    my $error;
	    for my $symop (@symops) {
		$error = SymopParse::check_symmetry_operator( $symop );
		if( $error ) {
		    $has_errors = 1;
		    print "$0: $filename: $error\n";
		}
	    }
	    next if $has_errors;

	    my $key = mk_symop_key( \@symops );
	    print "## >>> $key\n";
	    if( exists $symop_lookup_table{$key} ) {
		print "_[local]_cod_est_spacegroup_name_H-M ";
		print "'", $symop_lookup_table{$key}{setting_name}, "'\n";
	    } else {
		print "_[local]_cod_est_spacegroup_name_H-M ?\n";
	    }
	}
	if( exists $dataset->{values}{"_symmetry_space_group_name_H-M"} ) {
	    print "_symmetry_space_group_name_H-M ";
	    print "'", $dataset->{values}{"_symmetry_space_group_name_H-M"}[0],
	          "'\n";
	}
    }
}
