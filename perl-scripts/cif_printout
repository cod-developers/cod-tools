#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author$
#$Revision$
#$URL$
#$Date$
#$Id$
#------------------------------------------------------------------------------
#*
#  Parse CIF file and print out the structure generated by CIF parser
#**

use strict;
use lib "./lib/perl5";
use lib "./CIFParser";
use lib "./CCIFParser";
use lib "./CIFTags";
use CIFParser;
use CCIFParser;
use CIFDiff;
use SOptions;
use SUsage;

my $method = 'C';
my %options;
@ARGV = getOptions(
    "-m,--method" => \$method,
    "--do-not-unprefix-text" => sub{ $options{do_not_unprefix_text} = 1 },
    "--do-not-unfold-text"   => sub{ $options{do_not_unfold_text} = 1 },
    "--fix-errors"           => sub{ $options{fix_errors} = 1 },
    "--fix-duplicate-tags-with-same-values"  =>
        sub{ $options{fix_duplicate_tags_with_same_values} = 1 },
    "--fix-duplicate-tags-with-empty-values" =>
        sub{ $options{fix_duplicate_tags_with_empty_values} = 1 },
    "--fix-data-header"     => sub{ $options{fix_data_header} = 1 },
    "--fix-datablock-names" => sub{ $options{fix_datablock_names} = 1 },
    "--fix-string-quotes"   => sub{ $options{fix_string_quotes} = 1 },
);

@ARGV = ( "-" ) unless @ARGV;

foreach( @ARGV ) {

    my( $data, $errcount );
    if( $method eq 'Perl' ) {
        my $parser = new CIFParser;
        $data = $parser->Run( $_, \%options );
        if( defined $parser->YYData->{ERRCOUNT} ) {
            $errcount = $parser->YYData->{ERRCOUNT};
        } else {
            $errcount = 0;
        }
    } elsif( $method eq 'C' ) {
        ( $data, $errcount ) = CCIFParser::parse( $_, \%options );
    } else {
        die( "$0: unknown method: $method" );
    }

    foreach my $datablock ( @$data ) {
        print  $datablock->{name} . "\n";
        print "Values:\n";
        foreach my $tag ( sort { lc( $a ) cmp lc( $b ) } @{$datablock->{tags}} ) {
            print "    " . $tag . " ("
                . scalar( @{$datablock->{values}{$tag}} ) . ") ";
            print join( " ", map{ "[$_]" } @{$datablock->{values}{$tag}} )
                . "\n";
        }
        if( exists $datablock->{precisions} ) {
            print "Precisions:\n";
            foreach my $tag ( sort keys %{$datablock->{precisions}} ) {
                print "    " . $tag . " ("
                    . scalar( @{$datablock->{precisions}{$tag}} ) . ") ";
                print join( " ", map{ ( defined $_ ) ? $_ : "undef" }
                    @{$datablock->{precisions}{$tag}} ) . "\n";
            }
        }
        if( exists $datablock->{types} ) {
            print "Types:\n";
            foreach my $tag ( sort keys %{$datablock->{types}} ) {
                print "    " . $tag . " ";
                print join( " ", @{$datablock->{types}{$tag}} ) . "\n";
            }
        }
        print "Inloops:\n";
        foreach my $tag ( sort keys %{$datablock->{inloop}} ) {
            print "    " . $tag . " " . $datablock->{inloop}{$tag} . "\n";
        }
        print "Loops:\n";
        foreach my $loop ( @{$datablock->{loops}} ) {
            print join( " ", @$loop ) . "\n";
        }
    }
    print STDERR "$errcount error(s) detected\n";
}
