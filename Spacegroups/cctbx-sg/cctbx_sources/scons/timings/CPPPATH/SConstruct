#
# __COPYRIGHT__
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

"""
This configuration is for testing the timing of searching long lists of
CPPPATH directories.

We create 100 on-disk directories, with a single .h file in the last
directory in the list.  We set CPPPATH to a list of Dir Nodes for the
created directories.  The .c file we create #includes the .h file to be
found in the last directory in the list.
"""

import os
import os.path

dir_cnt = 100

dir_list = map(lambda t: 'inc_%03d' % t, xrange(dir_cnt))

for dir in dir_list:
    if not os.path.isdir(dir):
        os.mkdir(dir)

foo_h = 'inc_099/foo.h'

if not os.path.isfile(foo_h):
    open(foo_h, 'w').write('#define     FOO     1\n')

contents = """\
#include "foo.h"
void
foo(void)
{
    ;
}
"""

if not os.path.isfile('foo.c'):
    open('foo.c', 'w').write(contents)

inc_list = map(lambda d: Dir(d), dir_list)

env = Environment(CPPPATH = inc_list)

env.Object( 'foo.c' )
