#
# __COPYRIGHT__
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

"""
This configuration is for timing how we handle the NxM interaction when
we build a lot of targets from a lot of source files.

We create a list of 100 target files that will each be built by copying
a file from a corresponding list of 100 source files.  The source
files themselves are each built by a Python function action that's the
equivalent of "echo contents > $TARGET".
"""

target_cnt = 100

env = Environment()

def create_file( env, target, source ):
    t = str(target[0])
    open( t, 'w' ).write('contents\n')

source_list = map(lambda t: 'source_%03d' % t, xrange(target_cnt))
target_list = map(lambda t: 'target_%03d' % t, xrange(target_cnt))

for source in source_list:
    env.Command( source, [], create_file )

def copy_files( env, target, source ):
    for t, s in zip(target, source):
        open(str(t),  'w').write(open(str(s), 'r').read())

env.Command( target_list, source_list, copy_files )
