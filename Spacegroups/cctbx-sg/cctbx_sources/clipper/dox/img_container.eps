%!PS-Adobe-2.0
%%Creator: dot version gviz 1.7.3b (Mon Feb 26 14:10:22 EST 2001)
%%For: (cowtan) Kevin Cowtan
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 251 233
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndResource
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 251 233
%%PageOrientation: Portrait
gsave
35 35 216 198 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
[ /CropBox [36 36 251 233] /PAGES pdfmark
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	CSpacegroup
gsave 10 dict begin
newpath 188 188 moveto
100 188 lineto
100 152 lineto
188 152 lineto
closepath
stroke
gsave 10 dict begin
144 171 moveto (CSpacegroup) 75 14.00 -0.50 alignedtext
end grestore
end grestore

%	CCell 1
gsave 10 dict begin
filled
0.000 0.000 0.827 nodecolor
newpath 135 116 moveto
79 116 lineto
79 80 lineto
135 80 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
107 99 moveto (CCell 1) 43 14.00 -0.50 alignedtext
end grestore
end grestore

%	CSpacegroup -> CCell 1
newpath 135 152 moveto
130 144 125 134 121 125 curveto
stroke
newpath 119 126 moveto
116 116 lineto
123 124 lineto
closepath
gsave 0 setgray stroke grestore fill

%	CCell 2
gsave 10 dict begin
filled
0.000 0.000 0.827 nodecolor
newpath 209 116 moveto
153 116 lineto
153 80 lineto
209 80 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
181 99 moveto (CCell 2) 43 14.00 -0.50 alignedtext
end grestore
end grestore

%	CSpacegroup -> CCell 2
newpath 153 152 moveto
158 144 163 134 167 125 curveto
stroke
newpath 165 124 moveto
172 116 lineto
169 126 lineto
closepath
gsave 0 setgray stroke grestore fill

%	CXmap<float>
gsave 10 dict begin
filled
0.000 0.000 0.827 nodecolor
newpath 98 44 moveto
0 44 lineto
0 8 lineto
98 8 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
49 27 moveto (CXmap<float>) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	CCell 1 -> CXmap<float>
newpath 92 80 moveto
85 71 77 61 69 51 curveto
stroke
newpath 68 53 moveto
63 44 lineto
71 50 lineto
closepath
gsave 0 setgray stroke grestore fill

%	CXmap<bool>
gsave 10 dict begin
filled
0.000 0.000 0.827 nodecolor
newpath 214 44 moveto
116 44 lineto
116 8 lineto
214 8 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
165 27 moveto (CXmap<bool>) 84 14.00 -0.50 alignedtext
end grestore
end grestore

%	CCell 1 -> CXmap<bool>
newpath 122 80 moveto
129 71 137 61 145 51 curveto
stroke
newpath 143 50 moveto
151 44 lineto
146 53 lineto
closepath
gsave 0 setgray stroke grestore fill
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
