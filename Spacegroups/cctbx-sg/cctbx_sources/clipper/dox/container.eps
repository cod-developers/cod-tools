%!PS-Adobe-2.0
%%Creator: dot version 1.7.11 (Fri Nov 16 14:55:37 GMT 2001)
%%For: (cowtan) Kevin Cowtan
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 256 215
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 256 215
%%PageOrientation: Portrait
gsave
35 35 221 180 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
[ /CropBox [36 36 256 215] /PAGES pdfmark
0.000 0.000 0.000 graphcolor
12.00 /Helvetica set_font

%	CSpacegroup
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
newpath 176 169 moveto
100 169 lineto
100 141 lineto
176 141 lineto
closepath
fill
newpath 176 169 moveto
100 169 lineto
100 141 lineto
176 141 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
138 156 moveto (CSpacegroup) 64 12.00 -0.50 alignedtext
end grestore
end grestore

%	CCell 1
gsave 10 dict begin
filled
0.333 1.000 1.000 nodecolor
newpath 129 103 moveto
57 103 lineto
57 75 lineto
129 75 lineto
closepath
fill
newpath 129 103 moveto
57 103 lineto
57 75 lineto
129 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
93 90 moveto (CCell 1) 37 12.00 -0.50 alignedtext
end grestore
end grestore

%	CSpacegroup -> CCell 1
newpath 128 140 moveto
123 132 115 121 109 112 curveto
stroke
newpath 107 114 moveto
103 104 lineto
111 111 lineto
closepath
fill

%	CCell 2
gsave 10 dict begin
filled
0.333 1.000 1.000 nodecolor
newpath 219 103 moveto
147 103 lineto
147 75 lineto
219 75 lineto
closepath
fill
newpath 219 103 moveto
147 103 lineto
147 75 lineto
219 75 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
183 90 moveto (CCell 2) 37 12.00 -0.50 alignedtext
end grestore
end grestore

%	CSpacegroup -> CCell 2
newpath 148 140 moveto
153 132 161 121 167 112 curveto
stroke
newpath 165 111 moveto
173 104 lineto
169 114 lineto
closepath
fill

%	CXmap<float>
gsave 10 dict begin
filled
0.106 1.000 1.000 nodecolor
newpath 84 37 moveto
0 37 lineto
0 9 lineto
84 9 lineto
closepath
fill
newpath 84 37 moveto
0 37 lineto
0 9 lineto
84 9 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
42 24 moveto (CXmap<float>) 72 12.00 -0.50 alignedtext
end grestore
end grestore

%	CCell 1 -> CXmap<float>
newpath 82 74 moveto
76 65 67 55 59 45 curveto
stroke
newpath 58 47 moveto
53 38 lineto
61 44 lineto
closepath
fill

%	CXmap<bool>
gsave 10 dict begin
filled
0.106 1.000 1.000 nodecolor
newpath 186 37 moveto
102 37 lineto
102 9 lineto
186 9 lineto
closepath
fill
newpath 186 37 moveto
102 37 lineto
102 9 lineto
186 9 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
144 24 moveto (CXmap<bool>) 72 12.00 -0.50 alignedtext
end grestore
end grestore

%	CCell 1 -> CXmap<bool>
newpath 104 74 moveto
110 65 119 55 127 45 curveto
stroke
newpath 125 44 moveto
133 38 lineto
128 47 lineto
closepath
fill
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
