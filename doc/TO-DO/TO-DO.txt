-- Create a CIF object and an object-oriented interface to CIFParser,
   returning the CIF Perl object;

-- Change C CIF parser library interface, pass flags to C CIF parsing
   function as a bit field, not as an object;

-- Unify calls to CIFParser and CCIFParser, making them a true drop-in
   replacement of each other; make a decent function-style interface
   of them both, in addition to the old "object" interface;

-- Return a valid CIF data structure or object when an empty file is
   parsed, so that the upstream programs can be simplified;

-- Check chf_validate: it seems that the missing loop-mandatory items
   _diffrn_refln_index_{h,k,l} go unnoticed...

-- Make cif_filter report symops that do not lead to determination of
   a spacegroup, as a warning, even if --keep-unrecognised-spacegroups
   option is in action.

-- Error in 'cif_validate': it hangs on error in first data_ block, even
   if more data_ blocks do exist in file being checked. This SHALL not
   happen - it must skip only current data_ block.

-- Refactor cif_mark_disorder by moving its core functionality to a seperate
   module. The same strategy can probably be applied to several other scripts
   as well.

-- Move copies of subroutine atom_array_from_cif() and like from
   cif_molecule, cif_overlay, cif_p1, cif_mark_disorder (called
   initial_atoms()) to separate Perl module.

-- Add --exclude-dummies option to cif_cell_contents.
