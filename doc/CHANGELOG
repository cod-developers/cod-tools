cod-tools (unreleased)

  * Added:
    - version information is printed by most of the scripts using
      --version command line option.
    - reading/writing of CIF v2.0 format.
  * Changed:
    - using symmetry operators as provided by spglib in
      cif_find_symmetry instead of operators from lookup hashes as ones
      from spglib seem to better describe spacegroups with
      nonconventional settings.
    - using Hall symbol (more precise) for the detection of symmetry
      space group in the output of spglib in cif_find_symmetry.
    - JSON, written/read by cif2json and json2cif, accordingly, is now
      concatenable (relaxed) by default. Strictly conforming JSON can
      now be produced via --strict command line option in cif2json.
      json2cif is able to read both strict and relaxed JSON.
    - interface of C CIF parser:
      - datablock_value() -> datablock_cifvalue() in datablock.h
      - datablock_overwrite_value() -> datablock_overwrite_cifvalue()
        in datablock.h
      - datablock_types() -> datablock_value_type() in datablock.h
      - datablock_insert_value() -> datablock_insert_cifvalue() in
        datablock.h
      - datablock_push_loop_value() -> datablock_push_loop_cifvalue()
        in datablock.h
  * Removed:
    - datablock_values() from datablock.h
  * Fixed:
    - adding perl-XML-Simple as a run dependency for CentOS-6.8.

cod-tools (1.1)

  * Added:
    - cif_find_symmetry and spglib interface (using spglib-1.6.4)
    - dependency list for LinuxMint-18.1.
    - cif_bounding_box: a new script to transform obabel-generated
      non-crystal CIF files (no symmetry information, cell parameters,
      Cartesian coordinates given instead of fractional) to cubic unit
      cells, separated by margins of vacuum.
    - cif2rdf: a new script to generate RDF descriptions directly from
      CIF files.
    - cif_fix_values: adding functionality to fix the most common
      mistakes in the values of
      _atom_sites_solution_{primary,secondary,hydrogens}.
    - cif2cod: validating extracted data

        ------------------------------------------------------------------------
        r5138 | andrius | 2017-03-27 16:21:33 +0300 (Mon, 27 Mar 2017) | 4 lines

        trunk/
        Implementing usage of database-description.xml in cif2cod instead of
        doc/CODDictionary.xml, which has been superseded by the former.

        ------------------------------------------------------------------------
        r5054 | andrius | 2017-03-14 12:20:16 +0200 (Tue, 14 Mar 2017) | 7 lines

        trunk/
        Implementing the validation of data, extracted via
        COD::CIF::Data::CIF2COD::cif2cod(). The validation is done by checking
        the returned values against type restrictions of SQL. The pairing of data
        columns and types has to be supplied via an XML file,
        doc/CODDictionary.xml for the most uses. Adding a syntetic test case.

    - JSON schema for validation of output from cif2json and like.
    - oqmd2cif:

        ------------------------------------------------------------------------
        r4724 | andrius | 2016-10-06 09:48:15 +0300 (Thu, 06 Oct 2016) | 4 lines

        trunk/
        Adding data names _oqmd_calculation_label and _oqmd_structure_label to
        cif_oqmd.dic.

        ------------------------------------------------------------------------
        r4722 | andrius | 2016-10-05 19:20:58 +0300 (Wed, 05 Oct 2016) | 4 lines

        trunk/
        Adding data names _oqmd_database_code and _oqmd_calculation_converged to
        cif_oqmd.dic.

        ------------------------------------------------------------------------
        r4556 | andrius | 2016-01-25 11:29:22 +0200 (Mon, 25 Jan 2016) | 3 lines

        trunk/
        Printing value for _dft_lattice_energy in the output of oqmd2cif.

        ------------------------------------------------------------------------
        r4554 | andrius | 2016-01-22 13:31:21 +0200 (Fri, 22 Jan 2016) | 3 lines

        trunk/
        Adding occupancies and magnetic moments to the output of oqmd2cif.

        ------------------------------------------------------------------------
        r4553 | andrius | 2016-01-22 13:03:45 +0200 (Fri, 22 Jan 2016) | 4 lines

        trunk/
        Adding references to calculation input structures in the output of
        oqmd2cif.

        ------------------------------------------------------------------------
        r4552 | andrius | 2016-01-22 12:57:08 +0200 (Fri, 22 Jan 2016) | 3 lines

        trunk/
        Adding band gap to the output of oqmd2cif.

        ------------------------------------------------------------------------
        r4551 | andrius | 2016-01-22 11:22:25 +0200 (Fri, 22 Jan 2016) | 4 lines

        trunk/
        Parsing out values from (apparently) VASP settings, given in OQMD
        'calculations' table.

        ------------------------------------------------------------------------
        r4550 | andrius | 2016-01-22 09:56:33 +0200 (Fri, 22 Jan 2016) | 3 lines

        trunk/
        Adding OQMD structure label to the output of oqmd2cif.


        ------------------------------------------------------------------------
        r4549 | andrius | 2016-01-21 15:23:52 +0200 (Thu, 21 Jan 2016) | 4 lines

        trunk/
        Using COD::CIF::Tags::Print::print_single_tag_and_value() to print CIF
        tags in a neat manner.

        ------------------------------------------------------------------------
        r4548 | andrius | 2016-01-21 14:36:29 +0200 (Thu, 21 Jan 2016) | 4 lines

        trunk/
        Setting value 'error' for _oqmd_error_flag tag if calculation is marked as
        resulting in errors in the OQMD database.

        ------------------------------------------------------------------------
        r4547 | andrius | 2016-01-21 12:40:55 +0200 (Thu, 21 Jan 2016) | 4 lines

        trunk/
        Putting total energy and runtime values from OQMD database to converted
        CIFs.

        ------------------------------------------------------------------------
        r4546 | andrius | 2016-01-21 11:52:34 +0200 (Thu, 21 Jan 2016) | 4 lines

        trunk/
        Adding OQMD database ID to CIFs, generated by oqmd2cif, as well as OQMD
        calculation label and convergence flag.

        ------------------------------------------------------------------------
        r4479 | andrius | 2015-12-18 10:32:22 +0200 (Fri, 18 Dec 2015) | 5 lines

        trunk/
        Bugfix: ordering of atoms in SQL 'SELECT' statement did not help to make
        the output of 'oqmd2cif' deterministic, as later in the code the list of
        atoms was accessed randomly.

        ------------------------------------------------------------------------
        r4478 | andrius | 2015-12-18 10:25:27 +0200 (Fri, 18 Dec 2015) | 4 lines

        trunk/
        Ordering atoms by 'atoms.id' in 'oqmd2cif' in order to make the output of
        the script deterministic.

        ------------------------------------------------------------------------
        r4449 | andrius | 2015-12-15 10:29:36 +0200 (Tue, 15 Dec 2015) | 4 lines

        trunk/
        Making 'oqmd2cif' produce syntactically correct CIF files for structures
        with no atoms.

    - cod_predeposition_check: implementing parser selection via
      command line options.
    - COD::RDF: a new module for RDF generation with most of the code
      taken from cod2rdf.
    - COD::AuthorNames: a new module for author name parsing to a new
      Perl module with the code from:
      URL: svn+ssh://www.crystallography.net/home/coder/svn-repositories/codcif2xml/trunk/programs/rdfxml2xml
      Repository Root: svn+ssh://www.crystallography.net/home/coder/svn-repositories/codcif2xml
      Repository UUID: e9639961-1eee-46c2-8ca7-0101a2976781
      Revision: 73
    - COD::Algebra: a new module with common GCD functions
    - COD::AtomNeighbours: adding subroutine
      neighbour_list_from_chemistry_mol() for the construction of
      atom neighbours data structure from the output of
      Chemistry::Mol Perl module.
    - cif_hkl_check: diffraction data files conforming to
      cif_twinning.dic are detected as containing diffraction data.
    - COD::Spacegroups::Lookup::COD: adding an extra space group
      setting 'P n m a (c,a-1/4,b)'.
    - cif2cod: adding '--include-keywords-with-undefined-values' and
      '--exclude-keywords-with-undefined-values' command line options.
    - cif_parse: adding '--(no|dont)-fix-syntax-errors' command line
      options.
    - cif_filter: reporting cases when the symmetry space group can
      not be determined from symmetry operators.
    - COD::Algebra::Vector: adding subroutine vector_len().
    - cif_diff: adding '--ignore-empty-values' command line option.
    - cif_fillcell: adding '_space_group_IT_number' and 
      '_space_group_name_Hall' data items to the output.
    - cif_fillcell: adding '--unit-cell', '--no-supercell',
      '--supercell' command line options.
    - cif_validate: checking the existance of parent links, as defined
      via '_list_link_parent' of ddl_core.dic.
    - cif_cod_check: adding a check to locate disorder groups of the
      same assembly having different numbers of atoms (off by
      default).
    - COD::Cell: adding vectors2cell().
  * Changed:
    - COD::CID::Data::CIF2COD treats CIF value '?' amid white space as
      undefined.
    - CIF parsers:
      - adding the ' -- fixed' suffix to parser warning messages
        informing about unquoted strings with spaces.
      - rephrasing error messages in the CIF parsers: replacing one
        occurence of comma (',') and one occurence of a dash ('-')
        with two dashes ('--') and changing the phrase 'replaced by'
        to 'replaced with'.
    - Messages in scripts:
      - cif_cod_check
      - cif_correct_tags
      - cif_diff
      - cif_filter
      - cif_fix_values
      - cif_hkl_check
      - cif_merge
      - cif_validate
      - cif2cod
    - Messages in Perl modules:
      - COD::Cell::Niggli::KG76
      - COD::CIF::Data
      - COD::CIF::Data::AtomList
      - COD::CIF::Data::CIF2COD
      - COD::CIF::Data::CODNumbers
      - COD::CIF::Data::CODPredepositionCheck
      - COD::CIF::Data::Diff
      - COD::SOptions
      - COD::Spacegroups::Lookup::COD
    - Renamed tools/duplicate_spacegroups -> tools/duplicate_space_groups
    - COD XML:
      - adding descriptions of 'Z', 'Zprime', 'cellformula', 'compoundsource'.

        ------------------------------------------------------------------------
        r5075 | antanas | 2017-03-16 17:23:26 +0200 (Thu, 16 Mar 2017) | 4 lines

        trunk/ (antanas@echidna.ibt.lt)
        Refactoring: renaming "CODDictionary" tag to "Database", "CODParameter" 
        to "Field", "CODCode" to "Code".

        ------------------------------------------------------------------------
        r5053 | andrius | 2017-03-14 10:34:10 +0200 (Tue, 14 Mar 2017) | 4 lines

        trunk/
        Adding SQL data types to CODDictionary.xml in
        <SQLDataType>...</SQLDataType> items.

        ------------------------------------------------------------------------
        r4956 | antanas | 2017-02-20 17:48:41 +0200 (Mon, 20 Feb 2017) | 3 lines

        trunk/doc/ (antanas@echidna.ibt.lt)
        Refactoring: correcting several minor typos in the 'CODDictionary.xml'.

        ------------------------------------------------------------------------
        r4908 | andrius | 2017-02-07 12:36:53 +0200 (Tue, 07 Feb 2017) | 3 lines

        trunk/
        Fixing typos in CODDictionary.xml.

    - Ceasing to convert horizontal tabulations ('\t') into spaces in
      both Bison and Yapp CIF parsers, since such treatment of '\t'
      may corrupt data. Furthermore, such conversion caused lots of
      memory reallocations in Bison CIF parser.
    - cif_correct_tags:

        ------------------------------------------------------------------------
        r5041 | antanas | 2017-03-07 15:03:15 +0200 (Tue, 07 Mar 2017) | 5 lines

        trunk/data/ (antanas@echidna.ibt.lt)
        Enhancement: updating the data item replacement list by adding
        misspelt variants of the '_publ_author_name' and
        '_publ_author_address' data item names.

        ------------------------------------------------------------------------
        r5006 | antanas | 2017-03-05 20:02:44 +0200 (Sun, 05 Mar 2017) | 4 lines

        trunk/data/ (antanas@echidna.ibt.lt)
        Enhancement: updating the data item replacement list by adding
        misspelt variants of the '_geom_*' data item names.

        ------------------------------------------------------------------------
        r5005 | antanas | 2017-03-03 13:38:54 +0200 (Fri, 03 Mar 2017) | 5 lines

        trunk/ (antanas@echidna.ibt.lt)
        Bug fix: modifying the 'cif_correct_tags' script to skip
        value comparison if at least one of the data items is within
        a loop structure.

        ------------------------------------------------------------------------
        r5004 | antanas | 2017-03-02 18:56:06 +0200 (Thu, 02 Mar 2017) | 3 lines

        trunk/data/ (antanas@echidna.ibt.lt)
        Bug fix: correcting several replacement rules.

        ------------------------------------------------------------------------
        r5003 | antanas | 2017-03-02 18:52:58 +0200 (Thu, 02 Mar 2017) | 5 lines

        trunk/data/ (antanas@echidna.ibt.lt)
        Enhancement: updating the data item replacement list by adding
        misspelt variants of the '_publ_contact_author' loop data item
        names.

        ------------------------------------------------------------------------
        r5002 | antanas | 2017-03-02 17:38:49 +0200 (Thu, 02 Mar 2017) | 5 lines

        trunk/data/ (antanas@echidna.ibt.lt)
        Refactoring: commenting out "_exptl_crystal_f_000'" replacement
        rule for now since the dataq name seems to be pointing to a
        different data item than the "_exptl_crystal_f_000".

        ------------------------------------------------------------------------
        r5001 | antanas | 2017-03-02 17:22:40 +0200 (Thu, 02 Mar 2017) | 4 lines

        trunk/data/ (antanas@echidna.ibt.lt)
        Enhancement: updating the data item replacement list by adding
        misspelt variants of the '_exptl_crystal_F_000' data item name.

        ------------------------------------------------------------------------
        r5000 | antanas | 2017-03-02 16:18:45 +0200 (Thu, 02 Mar 2017) | 4 lines

        trunk/ (antanas@echidna.ibt.lt)
        Refactoring: moving the 'replacement_tags.lst' file to the
        'replacement-values' folder.

        ------------------------------------------------------------------------
        r4999 | antanas | 2017-03-02 16:15:22 +0200 (Thu, 02 Mar 2017) | 5 lines

        trunk/ (antanas@echidna.ibt.lt)
        Enhancement: copying the replacement data item list to the data folder
        so it could be modified without affecting the test output. Adding a few
        more replacement rules.

        ------------------------------------------------------------------------
        r4998 | antanas | 2017-03-02 15:24:31 +0200 (Thu, 02 Mar 2017) | 11 lines

        cod-tools/ (antanas@echidna.ibt.lt)
        Enhancement: modifying the way 'cif_correct_tags' script behaves when
        the replacement tag is already in the file. Originally, the replacement
        would silently not be carried at all in cases like these. However, from
        now on the script woll carry out one of the two actions based on the 
        values of the misspelt and the replacement data items:
        1) if the values match, the misspelt data item will be removed and
        reported;
        2) if the values do not match, the misspelt data item will be reported,
        but not modified in any way.

        ------------------------------------------------------------------------
        r4597 | andrius | 2016-02-29 14:22:30 +0200 (Mon, 29 Feb 2016) | 3 lines

        trunk/
        Adding a pair of frequently misspellt CIF tags to replacement_tags.lst.

    - cif_cod_numbers: also considering the unit cell formula and
      compound source when searching for duplicate entries.
    - cif_tcod_tree: using more portable way to fetch contents of
      remote file to Perl scalar using WWW::Curl::Easy.
    - pycodcif:

        ------------------------------------------------------------------------
        r4854 | andrius | 2017-02-01 10:19:26 +0200 (Wed, 01 Feb 2017) | 6 lines

        trunk/
        Merging in branches/andrius-python-refactoring/.

        Merge command:
        svn merge ^/branches/andrius-python-refactoring


        ------------------------------------------------------------------------
        r4823 | andrius | 2017-01-27 12:00:27 +0200 (Fri, 27 Jan 2017) | 3 lines

        src/lib/python2.7/dist-packages/cod/ccifparser/
        Making parser options optional for Python CIF parser.

        ------------------------------------------------------------------------
        r4772 | andrius | 2016-11-15 16:36:51 +0200 (Tue, 15 Nov 2016) | 4 lines

        src/lib/python2.7/dist-packages/cod/ccifparser/
        Attempting to use python2.6 if python2.7 does not exist, in build of
        C-Python CIF parser.

        ------------------------------------------------------------------------
        r4771 | andrius | 2016-11-15 16:30:31 +0200 (Tue, 15 Nov 2016) | 4 lines

        src/lib/python2.7/dist-packages/cod/ccifparser/
        Using more common Python syntax in order to make Python code more
        backwards-compatible, in particluar with python2.6.

        ------------------------------------------------------------------------
        r4763 | andrius | 2016-10-26 18:23:15 +0300 (Wed, 26 Oct 2016) | 4 lines

        trunk/
        Simplifying the Makefile of CIF parser bindings for Python. Instead of
        linking with the objects, the linking is now performed with library files.

        ------------------------------------------------------------------------
        r4761 | andrius | 2016-10-26 17:07:42 +0300 (Wed, 26 Oct 2016) | 3 lines

        trunk/
        Addin 'make install' target for Python CIF parser.
        ------------------------------------------------------------------------
        r4754 | andrius | 2016-10-25 16:06:04 +0300 (Tue, 25 Oct 2016) | 4 lines

        trunk/
        Bugfix: package names of Python and C CIF parser were swapped in
        debian/rules.

        ------------------------------------------------------------------------
        r4649 | antanas | 2016-05-06 18:51:27 +0300 (Fri, 06 May 2016) | 5 lines

        trunk/src/lib/python2.7/dist-packages/cod/ccifparser/ (antanas@echidna.ibt.lt)
        Bug fix: adding a code line in the 'ccifparser.c' that passes the
        'fix_datablock_name' option directly to the lexer. Now the C-Python
        parsers behaves in the same way as the C-Perl parser.

    - COD::CIF::Unicode2CIF:

        ------------------------------------------------------------------------
        r4599 | andrius | 2016-03-03 10:20:53 +0200 (Thu, 03 Mar 2016) | 6 lines

        trunk/
        Implementing conversion of named and decimal-numbered HTML entities into
        appropriate UTF8 code points in Unicode2CIF::cif2unicode(). Adding two
        test cases.

    - COD::CIF::Tags::DFT: updating tag list according to
      cif_dft.dic v0.020
    - COD::CIF::Tags::DictTags: updating tag list according to
      cif_core.dic v2.4.5
    - COD::CIF::Tags::TCOD: updating tag list according to
      cif_tcod.dic v0.009
    - Replacing COD::CIF::Data::SymmetryGenerator(),
      COD::CIF::Data::AtomList::copy_struct_deep() and analoguous
      functions with Perl built-in Clone::clone().
    - Eliminating "sponge" from
      makefiles/Makefile-perl-multiscript-tests to enable builts on
      CentOS-6.8.
    - COD::CIF::Data::CIF2COD: removing unused arguments (filename,
      datablock) from subroutine interfaces.
    - cif_fillcell: replacing deprecated CIF tags with their new
      counterparts.
    - COD::CIF::Data::SymmetryGenerator: apply_shifts() returns
      array reference instead of the array.
    - cif_distances: removing extra space from the output.
    - cif_molecule: printing only first five messages about detected
      bumps.
    - codcif and COD::CIF::Parser: removing duplicated line and
      position numbers from parser error messages.
    - Canonicalizing CIF data item names in a bunch of scipts that
      have not used this feature before. Homogenuous treatment of CIF
      data item names in the whole system is neccessary both to
      leverage the reusability of code and to avoid bugs.
    - cif_fillcell: building unit cell by default (instead of the
      3x3x3 supercell).
    - COD::SOptions: renaming interpolateFile() to interpolate_file().
    - Moving atom_groups() and assemblies() from cif_molecule and
      cif_p1 to COD::CIF::Data::AtomList.
    - cexceptions and getoptions: changing the linker from 'ld' to
      'cc'.
    - cif_distances: selecting the first shortest distance: this
      should solve the floating-point problem that occurs on different
      machines.
  * Deprecated:
    - usage of doc/CODDictionary.xml (database-description.xml of
      appropriate database should be used instead, such as
      http://www.crystallography.net/cod/xml/documents/database-description/database-description.xml)
  * Removed:
    - doc/TAGS.XML
  * Fixed:
    - adding libxml-simple-perl as a run dependency for Ubuntu-12.04
      and Debian-8.6.
    - CIF line folding protocol:

        ------------------------------------------------------------------------
        r5169 | andrius | 2017-03-31 17:53:04 +0300 (Fri, 31 Mar 2017) | 8 lines

        trunk/
        Bugfix in unfolding protocol: Perl parser did not remove backslash from
        the last line of the textfield. According to Hall2006,

        "a trailing backslash on the last line of a text field very nicely
        conveys the information that no trailing line termination is intended
        to be included within the character string."

        ------------------------------------------------------------------------
        r5168 | andrius | 2017-03-31 17:31:33 +0300 (Fri, 31 Mar 2017) | 5 lines

        trunk/
        Bugfix in unfolding protocol: trailing whitespace must be stripped, if
        it is following the backslash symbol in unfolded textfields. Both C and
        Perl CIF parsers are fixed, a test case is added.
        
        ------------------------------------------------------------------------
        r4583 | antanas | 2016-02-17 16:44:15 +0200 (Wed, 17 Feb 2016) | 7 lines

        trunk/ (antanas@echidna.ibt.lt)
        Bug fix: updating the way unfolding/unprefixing protocols are 
        implemented in the COD::CIF::Parser::Bison (by modifying the 
        cif_grammar.y file itself). Unprefixing a multiline text 
        field and without unfolding it no longer leaves an empty line at the 
        beginning of the text field.

        ------------------------------------------------------------------------
        r4582 | antanas | 2016-02-17 14:45:45 +0200 (Wed, 17 Feb 2016) | 6 lines

        trunk/src/lib/perl5/COD/CIF/Parser/ (antanas@echidna.ibt.lt)
        Bug fix: updating the way unfolding/unprefixing protocols are 
        implemented in the COD::CIF::Parser::Yapp. Unprefixing a multiline text 
        field that has a "/\n" as its second line no longer causes the text 
        field to also be unfolded.

    - COD::CIF::Unicode2CIF:

        ------------------------------------------------------------------------
        r4604 | andrius | 2016-03-14 16:16:57 +0200 (Mon, 14 Mar 2016) | 4 lines

        trunk/
        Bugfix: fixing an issue of converting CIF triple dash ('---') into UTF8
        em dash (&#x2014;) instead of a combination of figure dash and en dash.

        ------------------------------------------------------------------------
        r4603 | andrius | 2016-03-14 15:32:05 +0200 (Mon, 14 Mar 2016) | 7 lines

        trunk/
        Bugfix: converting CIF markup symbol "\s" correctly as lowercase sigma
        (GREEK SMALL LETTER SIGMA) instead of final lowercase sigma (GREEK SMALL
        LETTER FINAL SIGMA). On the other way round, UTF8 code point for final
        lowercase sigma is now converted into corresponding XML entity instead of
        CIF markup symbol "\s".

        ------------------------------------------------------------------------
        r4575 | antanas | 2016-02-14 03:43:23 +0200 (Sun, 14 Feb 2016) | 5 lines

        cod-tools/ (antanas@kurmis)
        Bug fix: modifying the COD::CIF::Unicode2CIF module to convert tilde 
        symbol '~' into the '\\sim ' sequence as specified by the CIF 
        specification instead of the '\sim ' sequence that was previously used. 

    - codcif: fixing incorrect line numbers in error messages.
    - Memory leaks in codcif and COD::CIF::Parser::Bison.
    - codcif: performing all character operations via int data type
      (instead of char) in cif_lexer.c, as conversions between char
      and int used to cause loss of EOF characters.
    - cif_split_primitive: preserving CIF comments in the output of
      the script.
    - Error messages in codcif (occurence -> occurrence)
    - Error messages in the following scripts:
      - cif_molecule
      - cod_predeposition_check
    - Error messages in the following Perl modules:
      - COD::CIF::Data::CODPredepositionCheck
      - COD::SOptions
    - Help texts of the following scripts:
      - cif_cell_contents
      - cif_cod_check
      - cif_cod_deposit
      - cif_cod_numbers
      - cif_diff
      - cif_eval_numbers
      - cif_filter
      - cif_hkl_COD_number
      - cif_hkl_check
      - cif_merge
      - cif_molecule
      - cif_p1
      - cif_select
      - cif_split
      - cif2cod
      - cifparse
      - cod_predeposition_check
    - cif_select: adding a missing import of
      COD::CIF::Tags::Manage::rename_tag()
    - cif_cod_check: using explicit UTF-8 binmode for STDERR.
    - COD::UserMessage: escaping newline characters in generated
      messages with numeric character reference '&#10;' in order to
      comply with the EBNF grammar of error messages as published in
      Merkys et al. 2016.
    - COD::Formulae::Parser::AdHoc: using COD::UserMessage for
      message formation.
    - cif_molecule: preventing printing of a syntactically incorrect
      CIFs (ones that contain loops without values).
    - cif_Fcalc: fixing a typo in the atom property name
      ('scat_dispesion_real' -> 'scat_dispersion_real').
    - cif_molecule: setting multiplicities to '?' for atoms of dummy
      molecules.
    - COD::CIF::Data::CIF2COD: returning SQL NULL instead of string
      "NULL" for unknown cell volumes.
    - codcif: duplicated tags, whose second occurence is in a loop,
      were reported as warnings instead of errors.
    - cif_cod_deposit: adding '--show-error' command line option for
      'curl' in order to make its error messages visible.
    - codcif: escaping special symbols ('&', ':', spaces and
      parentheses in some lexems) in C parser messages.
    - codcif: detecting reserved CIF lexem 'global_'.
    - codcif and COD::CIF::Parser::Yapp: detecting empty CIF data
      block names.
    - codcif and COD::CIF::Parser::Yapp: detecting unquoted CIF
      strings starting with closing square brackets.
    - codcif and COD::CIF::Parser::Yapp: returning an empty list of
      data blocks upon parsing empty CIF files. According to the CIF
      specification, empty CIF is an empty list of datablocks.
    - codcif: reporting replaced spaces in data block names as
      WARNINGs instead of NOTEs.
    - COD::CIF::Data::AtomList: sorting hash keys in atom_groups() in
      order to prevent from non-deterministic output.

------------------------------------------------------------------------
r4976 | antanas | 2017-02-27 09:56:23 +0200 (Mon, 27 Feb 2017) | 5 lines

cod-tools/ (antanas@kurmis)
Bug fix: sorting the assemblies so the output results
would not be affected by the perl hashing algorithm
in COD::CIF::Data::AtomList.

------------------------------------------------------------------------
r5170 | antanas | 2017-03-31 18:02:30 +0300 (Fri, 31 Mar 2017) | 8 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: modifying COD::CIF::Data::CIF2COD module to
only determine the number of distinct elements in the
crystal if the chemical formula sum is defined. In
addition to that, chemical formula sum values that
consist only of white spaces are now treated as
undefined values.

------------------------------------------------------------------------
r5161 | andrius | 2017-03-29 15:09:09 +0300 (Wed, 29 Mar 2017) | 4 lines

trunk/
Checking whether tag's value/precision is defined in
COD::CIF::Data::get_cell().

------------------------------------------------------------------------
r5154 | andrius | 2017-03-29 13:09:05 +0300 (Wed, 29 Mar 2017) | 5 lines

trunk/
Reimplementing the default print mode in cif_printout via Data::Dumper
instead of custom printing code. This change will allow printing nested
structures.

------------------------------------------------------------------------
r5023 | antanas | 2017-03-06 15:15:34 +0200 (Mon, 06 Mar 2017) | 4 lines

trunk/data/ (antanas@echidna.ibt.lt)
Enhancement: adding the integration of the 'Dummy' atom patch to the
AtomProperties module assembling process.

------------------------------------------------------------------------
r5020 | antanas | 2017-03-06 14:43:35 +0200 (Mon, 06 Mar 2017) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: adding 'Z' and 'Zprime' to the list of default new
fields in the COD::CIF::Data::CIF2COD module.

------------------------------------------------------------------------
r4997 | antanas | 2017-03-02 10:09:39 +0200 (Thu, 02 Mar 2017) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: adding a warning message to the 'cif2cod'
subroutine of the COD::CIF:Data::CIF2COD module that
informs the user that the data block does not contain
fractional coordinates.

------------------------------------------------------------------------
r4982 | saulius | 2017-03-01 09:26:57 +0200 (Wed, 01 Mar 2017) | 3 lines

trunk/dependencies/ (saulius@koala)
Adding a script to install packages necessary for testing.

------------------------------------------------------------------------
r4979 | antanas | 2017-02-28 19:18:06 +0200 (Tue, 28 Feb 2017) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: excluding dummy atoms from receiving the unit occupancy
whenever the --force-unit-occupancies option is in effect.
Refactoring: enforcing '.' occupancies for all dummy atoms that
are being output.

------------------------------------------------------------------------
r4977 | antanas | 2017-02-27 15:16:54 +0200 (Mon, 27 Feb 2017) | 10 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: updating the way --one-datablock-output and
--largest-molecule-only options interact. On its own (or
in combination with options other than the --one-datablock-output)
the --largest-molecule only option modifies the output to only
contain the molecule with the greatest number of atoms. However,
in combination with the --one-datablock-output it returns the
most likely (disorder group occupancy wise) molecule, which might
not necessarily contain the greatest number of atoms.

------------------------------------------------------------------------
r4974 | antanas | 2017-02-24 18:38:55 +0200 (Fri, 24 Feb 2017) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: changing the way disorder group combinations are generated.
From now on the combination with highest occupancy will be considered as
the best one. 

------------------------------------------------------------------------
r4953 | antanas | 2017-02-20 10:44:23 +0200 (Mon, 20 Feb 2017) | 4 lines

trunk/ (antanas@echidna.ibt.lt)
Enhancement: adding a new column 'cellformula' to the 'cif2cod' output
that store the cell formula with Z = 1.

------------------------------------------------------------------------
r4952 | antanas | 2017-02-20 10:36:09 +0200 (Mon, 20 Feb 2017) | 6 lines

trunk/ (antanas@echidna.ibt.lt)
Refactoring: moving the warning message about the user-provided
Z value mismatching the one given in the input file from the
COD::CIF::Data::CellContents module to the cif_cell_contents
script.

------------------------------------------------------------------------
r4926 | antanas | 2017-02-08 17:43:27 +0200 (Wed, 08 Feb 2017) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: updating the way dummy atoms are handled
in the 'cif_molecule' script. Additionally, a special
atom type '.' was added to the COD::AtomProperties to
represent dummy atoms.

------------------------------------------------------------------------
r4912 | antanas | 2017-02-07 17:29:50 +0200 (Tue, 07 Feb 2017) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: updating the 'cif_molecule' script to ignore
atoms with dummy ('.') or unknown ('?') coordinates.

------------------------------------------------------------------------
r4827 | andrius | 2017-01-27 16:18:46 +0200 (Fri, 27 Jan 2017) | 6 lines

trunk/
Merging branch 'andrius-cif2json' into trunk/. Most of the conflicts were
solved as 'theirs-full', since the trunk was previously merged into the
branch. However, src/lib/perl5/COD/CIF2JSON.pm, which was renamed in the
branch, was not merged somewhy, thus it had to be moved manually.

------------------------------------------------------------------------
r4796 | andrius | 2017-01-24 17:05:50 +0200 (Tue, 24 Jan 2017) | 4 lines

trunk/
Adding column 'compoundsource' (corresponding to CIF's 
'_chemical_compound_source') to the output of cif2cod.

------------------------------------------------------------------------
r4782 | andrius | 2016-11-28 14:49:23 +0200 (Mon, 28 Nov 2016) | 5 lines

trunk/
Appending ${LIBFLAGS} to the generation of SO file in Makefile for Perl
bindings of C CIF parser in order to ease external linking, for example,
against libcodcif.

------------------------------------------------------------------------
r4778 | andrius | 2016-11-25 10:35:09 +0200 (Fri, 25 Nov 2016) | 5 lines

trunk/
Linking COD::CIF::Parser::Bison against archives of static libraries (.a)
instead of objects (.o) of codcif, cexceptions and getoptions.
Removing rules to build dependencies from Makelocal-SWIG-module.

------------------------------------------------------------------------
r4759 | andrius | 2016-10-26 14:02:46 +0300 (Wed, 26 Oct 2016) | 5 lines

trunk/
Adding Perl modules Capture::Tiny and Carp::Assert to the dependency list
for CentOS. Since the modules are not available as yum packages, they are
installed via CPAN command line interface.

------------------------------------------------------------------------
r4756 | saulius | 2016-10-26 08:07:25 +0300 (Wed, 26 Oct 2016) | 3 lines

trunk/ (saulius@narvalas.ibt.lt)
Adding more cpd-tools compile- and run-time dependencies for CentOS-6.8.

------------------------------------------------------------------------
r4755 | saulius | 2016-10-26 07:52:50 +0300 (Wed, 26 Oct 2016) | 1 line

Adding CentOS-6.8 scripts to install build-time dependencies.

------------------------------------------------------------------------
r4751 | andrius | 2016-10-25 10:52:43 +0300 (Tue, 25 Oct 2016) | 3 lines

trunk/
Adding dependencies for CentOS-6.8.

------------------------------------------------------------------------
r4732 | antanas | 2016-10-06 11:51:16 +0300 (Thu, 06 Oct 2016) | 4 lines

trunk/data/ (antanas@antanas-tuxedo.europe.actelion.com)
Enhancement: adding a way to specify the name of the
generated module file.

------------------------------------------------------------------------
r4730 | antanas | 2016-10-06 11:26:38 +0300 (Thu, 06 Oct 2016) | 4 lines

trunk/data/ (antanas@antanas-tuxedo.europe.actelion.com)
Enhancement: adding a way to specify the namespace of the produced
perl module.

------------------------------------------------------------------------
r4719 | antanas | 2016-10-05 17:23:37 +0300 (Wed, 05 Oct 2016) | 3 lines

trunk/data/ (antanas@antanas-tuxedo.europe.actelion.com)
Enhancement: adding the latest version of bodr file.

------------------------------------------------------------------------
r4718 | antanas | 2016-10-05 17:21:30 +0300 (Wed, 05 Oct 2016) | 4 lines

trunk/data/AtomProperties/ (antanas@antanas-tuxedo.europe.actelion.com)
Refactoring: dereferencing hash explicitly since keys on references are
experimental perl v5.22.1.

------------------------------------------------------------------------
r4717 | antanas | 2016-10-05 17:17:26 +0300 (Wed, 05 Oct 2016) | 3 lines

trunk/data/AtomProperties/dependencies/LinuxMint-17.2/ (antanas@antanas-tuxedo.europe.actelion.com)
Enhancement: adding missing dependencies.

------------------------------------------------------------------------
r4716 | antanas | 2016-10-05 15:25:45 +0300 (Wed, 05 Oct 2016) | 6 lines

trunk/data/ (antanas@echidna.ibt.lt)
Refactoring: changing the module name from
'AtomProperties' to 'COD::AtomProperties" and
correcting a few layout mistakes in the comments
providing the bibliography.

------------------------------------------------------------------------
r4694 | andrius | 2016-09-15 10:32:03 +0300 (Thu, 15 Sep 2016) | 4 lines

trunk/dependencies/
Confirming that the same package list for Ubuntu-12.04 works also for
Debian-8.2.

------------------------------------------------------------------------
r4690 | andrius | 2016-07-25 15:20:16 +0300 (Mon, 25 Jul 2016) | 6 lines

trunk/
Bugfix: trimming polymers after polymer dimension measurement and before
formulae calculation. Multiple moieties are then merged into one if one
datablock output is requested. Thus, correct formulae are achieved and
non-polymer atoms are not trimmed.

------------------------------------------------------------------------
r4687 | andrius | 2016-07-12 13:53:46 +0300 (Tue, 12 Jul 2016) | 4 lines

trunk/
Simple polymers are now detected even with --max-polymer-span set to 0 in
cif_molecule.

------------------------------------------------------------------------
r4675 | antanas | 2016-06-27 01:44:43 +0300 (Mon, 27 Jun 2016) | 4 lines

cod-tools/ (antanas@kurmis)
Enhancement: adding the functionality to register if the applied 
symmetry operator was the unity one in the 'cif_distances' sript.

------------------------------------------------------------------------
r4671 | antanas | 2016-06-20 00:17:04 +0300 (Mon, 20 Jun 2016) | 5 lines

trunk/data/ (antanas@kurmis)
Bug fix: updating AtomProperties script to work with the new
cod-tools layout and adding explicit hash field ordering in
the 'atom_properties_merge' script.

------------------------------------------------------------------------
r4670 | antanas | 2016-06-19 21:03:32 +0300 (Sun, 19 Jun 2016) | 3 lines

trunk/ (antanas@kurmis)
Enhancement: adding dependencies for LinuxMint-17.2 and Ubuntu-16.04.

------------------------------------------------------------------------
r4669 | antanas | 2016-06-19 18:39:48 +0300 (Sun, 19 Jun 2016) | 4 lines

trunk/data/AtomProperties/ (antanas@kurmis)
Enhancement: adding a list of dependencies needed to run the
AtomProperties pipeline in LinuxMint-17.2.

------------------------------------------------------------------------
r4664 | antanas | 2016-06-13 12:03:03 +0300 (Mon, 13 Jun 2016) | 7 lines

cod-tools/ (antanas@antanas-tuxedo.europe.actelion.com)
Refactoring: updating the COD::UserMessage module to check
if the number of character repetitions is not negative
(for example, ' ' x $number). In newer Perl versions
trying to use a negative number in this context causes
a warning message to appear.

------------------------------------------------------------------------
r4654 | antanas | 2016-05-15 18:51:51 +0300 (Sun, 15 May 2016) | 8 lines

cod-tools/ (antanas@kurmis)
Bug fix: modifying the way CIF parser handle hearderless CIF files
(files that do not contain the 'data_*' header). The grammar rule for
the headerless data block was changed from 'data_item data_item_list'
to 'data_item | data_item data_item_list'. This modification allows to
succesfully parse and fix headerless data items that only contain a
single data item.  

------------------------------------------------------------------------
r4653 | antanas | 2016-05-09 13:12:25 +0300 (Mon, 09 May 2016) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: updating cif_lexer.c to allow unquoted strings starting with
the 'loop_' prefix. According to the CIF 1.1 specification 'loop_'
string is not allowed as a data item value, but the 'loop_*' strings are
perfectly fine. 

------------------------------------------------------------------------
r4646 | antanas | 2016-05-06 11:43:35 +0300 (Fri, 06 May 2016) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: updating the COD::CIF::Tags::Print subroutine to quote string
starting with the ']' symbol.

------------------------------------------------------------------------
r4636 | antanas | 2016-05-04 16:57:05 +0300 (Wed, 04 May 2016) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: updating error messages in CIF parsers that deal with
the 'STOP_' and 'GLOBAL_' symbols ('it is not acceptable in this
version' -> 'it is not acceptable in CIF v1.1').

------------------------------------------------------------------------
r4623 | antanas | 2016-04-13 17:23:24 +0300 (Wed, 13 Apr 2016) | 4 lines

trunk/src/lib/perl5/COD/ (antanas@echidna.ibt.lt)
Bug fix: refactoring the code to ensure that the code block is only 
executed upon successful execution in the COD::ErrorHandler module.

------------------------------------------------------------------------
r4622 | saulius | 2016-04-11 21:23:29 +0300 (Mon, 11 Apr 2016) | 3 lines

trunk/src/lib/perl5/COD/Cell/ (saulius@kolibris)
Adding more debug printouts to Delaunay/Delaunay.pm.

------------------------------------------------------------------------
r4619 | saulius | 2016-04-10 21:00:16 +0300 (Sun, 10 Apr 2016) | 4 lines

trunk/src/lib/perl5/COD/Cell/ (saulius@kolibris)
BUG FIX: correcting the Delaunay reduction algorith so that it does not 
return flattened unit cells.

------------------------------------------------------------------------
r4616 | saulius | 2016-04-09 07:58:38 +0300 (Sat, 09 Apr 2016) | 4 lines

trunk/src/lib/perl5/COD/Cell/ (saulius@kolibris)
Correcting instructions to run the Delaunay/Delaunay.pm module check 
from the command line.

------------------------------------------------------------------------
r4614 | saulius | 2016-04-09 07:43:05 +0300 (Sat, 09 Apr 2016) | 4 lines

trunk/ (saulius@kolibris)
Transposing the new basis matrix in COD/Cell/Conventional/deWG91.pm to 
get the correct cell vectors.

------------------------------------------------------------------------
r4612 | saulius | 2016-04-08 20:02:25 +0300 (Fri, 08 Apr 2016) | 4 lines

trunk/ (saulius@kolibris)
BUG FIX: correcting cell computation after reduction to conventional 
cell in the COD/Cell/Conventional/deWG91.pm module.

------------------------------------------------------------------------
r4608 | antanas | 2016-04-01 09:15:00 +0300 (Fri, 01 Apr 2016) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: correcting the 'eval {} if( $@ )' error handling block in the
'cif2xyz' and 'cif_fix_values' scripts. Previously, the '@_' variable
was erroneously used in the 'if' sentence.

------------------------------------------------------------------------
r4573 | andrius | 2016-02-05 16:39:55 +0200 (Fri, 05 Feb 2016) | 5 lines

trunk/
Reestimating spacegroup from recomputed symmetry operators if command line
option '--compute-symops' is turned on. Not all spacegroup tags are
overwritten yet.

------------------------------------------------------------------------
r4572 | andrius | 2016-02-05 14:49:07 +0200 (Fri, 05 Feb 2016) | 6 lines

trunk/
Implementing conversion of symmetry operators in cif_reduce_Niggli
according to publication by Grosse-Kunstleve, Sauter and Adams (2004). Not
all lattices are processed correctly, thus this functionality is only
experimental.

------------------------------------------------------------------------
r4569 | antanas | 2016-02-05 11:08:36 +0200 (Fri, 05 Feb 2016) | 8 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: modifying the COD::CIF::Data::CIF2COD::cif2cod to replace 
multiple whitespaces with a single whitespace only after the cif markup 
entities have been converted into utf characters. This allows to 
preserve at least a single whitespace after the symbol encoded by the 
cif markup entity, since some of these entities have a trailing 
whitespace as a part of their name ("\\times ", for example). 

------------------------------------------------------------------------
r4540 | antanas | 2016-01-19 01:26:13 +0200 (Tue, 19 Jan 2016) | 6 lines

cod-tools/ (antanas@kurmis)
Bug fix: modified the 'cif_cod_numbers_008' test to query the local 
SQLite database (that contains entries of only 20 files) instead of the 
main COD MySQL database since upon ingesting new files it started 
returning extra results.

------------------------------------------------------------------------
r4538 | antanas | 2016-01-19 00:25:23 +0200 (Tue, 19 Jan 2016) | 5 lines

trunk/ (antanas@kurmis)
Refactoring: applying small formating changes so the 'help2man' script 
would be identical to the version present in the upstream 'scripts' 
repository.

------------------------------------------------------------------------
r4521 | antanas | 2016-01-12 14:16:46 +0200 (Tue, 12 Jan 2016) | 8 lines

trunk/src/lib/perl5/ (antanas@echidna.ibt.lt)
Bug fix: modifying 'interpolate_file' subroutine to print the error 
message about not being able to open the file even if the 'option' 
argument is not provided. Also, modifying the 'get_value' 
subroutine to pass the option name to the 'interpolate_file' 
subroutine so it can be displayed in the error message in the 
'COD::SOptions' module.   

------------------------------------------------------------------------
r4487 | antanas | 2015-12-18 13:40:27 +0200 (Fri, 18 Dec 2015) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: replacing vsum() subroutine calls with 
COD::Algebra::Vector::vector_add subroutine calls in
COD::Cell::Conventional::deW91 and COD::Cell::Delaunay::Delaunay 
modules. 

------------------------------------------------------------------------
r4486 | antanas | 2015-12-18 13:08:28 +0200 (Fri, 18 Dec 2015) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: modifying 
COD::Spacegroups::Symop::Algebra::symop_vector_mul() subroutine to 
always return a scalar (reference to an array) instead of returning 
array or scalar based on the return value of the wantarray statement.

------------------------------------------------------------------------
r4483 | antanas | 2015-12-18 11:43:49 +0200 (Fri, 18 Dec 2015) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: modifying cell reduction subroutines to use identical 
interfaces.

------------------------------------------------------------------------
r4482 | antanas | 2015-12-18 11:33:31 +0200 (Fri, 18 Dec 2015) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: explicitly requesting scalar context for 
COD::Spacegroups::Symop::Algebra::symop_vector_mul() subroutine calls in 
COD::Cell::Conventional::deWG91.p::reduce() and 
COD::Cell::Delaunay::Delaunay::reduce() subroutines.

------------------------------------------------------------------------
r4481 | antanas | 2015-12-18 10:52:26 +0200 (Fri, 18 Dec 2015) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: updating 'makelist' command to use the 'find' program in 
multiple makefiles.  

------------------------------------------------------------------------
r4480 | saulius | 2015-12-18 10:37:06 +0200 (Fri, 18 Dec 2015) | 3 lines

trunk/ (saulius@koala.ibt.lt)
Fixing exception processing in 'scripts/cif_reduce_cell'.

------------------------------------------------------------------------
r4472 | antanas | 2015-12-17 20:05:52 +0200 (Thu, 17 Dec 2015) | 4 lines

trunk/dependencies/Ubuntu-12.04/ (antanas@kurmis)
Enhancement: adding 'Autoconf' to the list of build dependencies since 
it is required by the LinuxMint-17.2 (shares sources with Ubuntu 14.04).

------------------------------------------------------------------------
r4470 | antanas | 2015-12-17 15:17:58 +0200 (Thu, 17 Dec 2015) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: replacing 
COD::Spacegroups::Symop::Algebra::symop_apply subroutine calls with 
COD::Spacegroups::Symop::symop_vector_mul subroutine calls and removing 
the former subroutine.

------------------------------------------------------------------------
r4461 | antanas | 2015-12-17 11:41:35 +0200 (Thu, 17 Dec 2015) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancement: modifying the 'cif_distances' script to exclude atoms with 
unknown coordinates ('.' or '?').

------------------------------------------------------------------------
r4460 | antanas | 2015-12-17 11:36:36 +0200 (Thu, 17 Dec 2015) | 4 lines

cod-tools/ (antanas@echidna.ibt.lt)
Enhancing: modifying COD::CIF::Data::AtomList::atom_array_from_cif to 
exclude atoms with atleast one dot ('.') coordinate on request.

------------------------------------------------------------------------
r4456 | andrius | 2015-12-16 11:58:14 +0200 (Wed, 16 Dec 2015) | 4 lines

trunk/
Moving functions vangle() from various modules to
COD::Algebra::Vector::vector_angle().

------------------------------------------------------------------------
r4453 | antanas | 2015-12-16 01:08:51 +0200 (Wed, 16 Dec 2015) | 7 lines

cod-tools/ (antanas@kurmis)
Refactoring: renaming some of the atom fields in preparation to use the 
COD:CIF::Data::AtomList module in the 'cif_Fcalc' script. Also, 
modifying subroutines to accept the reference to the 'values' field of 
a parsed datablock instead of the reference to the whole datablock 
structure itself. 

------------------------------------------------------------------------
r4452 | antanas | 2015-12-15 20:55:43 +0200 (Tue, 15 Dec 2015) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: moving logic that sets atom values generated by 
'cif_molecule' to a separate subroutine 'set_cod_molecule_atom_fields' 
in COD::CIF::Data::AtomList.

------------------------------------------------------------------------
r4446 | antanas | 2015-12-14 16:23:54 +0200 (Mon, 14 Dec 2015) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: removing the 'do_not_resolve_chemical_type' option from the 
COD::CIF::Data::AtomList::extract atom since the functionality needed in 
the 'cif_distances' script can also be achieved with the 
'allow_unknown_chemical_types' option.

------------------------------------------------------------------------
r4445 | antanas | 2015-12-14 16:05:05 +0200 (Mon, 14 Dec 2015) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: moving the logic that allows to skip an atom before 
extracting it to a seperate subroutine 'is_atom_excludable' in 
COD::CIF::Data::AtomList.

------------------------------------------------------------------------
r4425 | antanas | 2015-12-08 15:01:06 +0200 (Tue, 08 Dec 2015) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: replacing the 'shift_atom' subroutine call with the 
COD::CIF::Data::SymmetryGenerator::apply_shifts subroutine call in the 
'cif_distances' script.

------------------------------------------------------------------------
r4403 | antanas | 2015-12-07 17:07:43 +0200 (Mon, 07 Dec 2015) | 8 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: changing the way COD::CIF::Parser::Yapp fixes quoted strings 
with a missing closing quote. Previously, the logic used for fixing 
these misquoted strings placed the closing quote after the first word 
and was unable to correctly fix string values with spaces in them. 
From now on, everything from the quote symbol to the end of the line
will be considered a part of the misquoted string. 

------------------------------------------------------------------------
r4401 | andrius | 2015-12-04 14:56:33 +0200 (Fri, 04 Dec 2015) | 5 lines

trunk/
Moving subroutine shift_atom() from cif_molecule and cif_p1 to
COD::CIF::Data::SymmetryGenerator. Removing redundant copies of
copy_atom(), leaving a single one in COD::CIF::Data::AtomList.

------------------------------------------------------------------------
r4400 | andrius | 2015-12-04 11:02:17 +0200 (Fri, 04 Dec 2015) | 4 lines

trunk/
Moving extraction of '_atom_site_symmetry_multiplicity' value to
AtomList::extract_atom() from AtomList::atom_array_from_cif().

------------------------------------------------------------------------
r4393 | antanas | 2015-12-03 09:17:34 +0200 (Thu, 03 Dec 2015) | 5 lines

cod-tools/ (antanas@kurmis)
Refactoring: replacing COD::ErrorHandler::process_errors subroutine call 
with the 'critical' subroutine call in the 
COD::CIF::Data::CODPredepositionCheck module.

------------------------------------------------------------------------
r4387 | antanas | 2015-12-02 10:03:11 +0200 (Wed, 02 Dec 2015) | 6 lines

trunk/scripts/ (antanas@kurmis)
Refactoring: replacing direct value assignment statements for looped and 
unlooped CIF data items with COD::CIF::Tags::Manage::set_tag and 
COD::CIF::Tags::Manage::set_loop_tags subroutine calls in the 
'cif_filter' script. 

------------------------------------------------------------------------
r4386 | antanas | 2015-12-02 08:59:03 +0200 (Wed, 02 Dec 2015) | 10 lines

trunk/ (antanas@kurmis)
Bug fix: updating the way user defined bibliography (provided using the 
command line options) is processed when empty strings are provided as 
option values in the 'cif_filter' script. Before the r4385 revision, 
user provided options were stored in separate global variables and 
replacing these variables with a single hash modified the behaviour when 
dealing with empty string values. This bug fix reverts script behaviour
to the previously established one (ignoring the option if the provided
value is an empty string).

------------------------------------------------------------------------
r4384 | antanas | 2015-11-27 14:13:37 +0200 (Fri, 27 Nov 2015) | 6 lines

cod-tools/ (antanas@echidna.ibt.lt)
Bug fix: removing 'fold' subroutine call in the bibliography 
reference hash processing block in the 'cif_filter' script. The 
subroutine was called in the wrong place and disregarded the command 
line options (--folding-width, --fold-title, --dont-fold-title).

------------------------------------------------------------------------
r4366 | antanas | 2015-11-25 17:39:53 +0200 (Wed, 25 Nov 2015) | 5 lines

cod-tools/ (antanas@echidna.ibt.lt)
Refactoring: replacing indirect method calls (new Object) with direct 
methods calls (Object->new) since it if the prefered way in Perl (and 
might help avoid some bugs on some occasions).

------------------------------------------------------------------------

cod-tools (1.0)

  * Initial release.
